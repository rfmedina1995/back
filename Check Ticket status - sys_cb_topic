This XML file does not appear to have any style information associated with it. The document tree is shown below.
<xml>
<sys_cb_topic>
<applicability/>
<applicability_mode>query</applicability_mode>
<autopilot_topic>false</autopilot_topic>
<category>7dfb71d03bf71e1033373f50c5e45a03</category>
<channels/>
<connect_queue/>
<context_profiles/>
<description>TC - ITSM conversation flow to check status of incidents and requested items.</description>
<dialog_acts_enabled>false</dialog_acts_enabled>
<expose_on_palette>false</expose_on_palette>
<flexible_conversation_switching>false</flexible_conversation_switching>
<foundational>false</foundational>
<graph>{ "graph_api_version": "1.0.73", "goals": { "primary": { "id": "primary", "trigger": { "type": "primary" }, "name": "primary", "applicability": "", "description": "", "nodes": { "bbfb23cfdc7e41ada4ad3ebe702d8aa4": { "id": "bbfb23cfdc7e41ada4ad3ebe702d8aa4", "stepType": "Start", "name": "Start", "greetingResponse": { "mode": "simple", "value": "" }, "applicability": { "mode": "query", "value": "" } }, "069cc8f28f7f4c53b9946efaaea2e14c": { "id": "069cc8f28f7f4c53b9946efaaea2e14c", "stepType": "TerminateGoal", "name": "End", "confirmationMessage": { "value": "", "mode": "simple" }, "applicability": { "mode": "query", "value": "" } }, "dfa3bf55da904715a0da94590f798567": { "id": "dfa3bf55da904715a0da94590f798567", "name": "Count Incidents and Req Items", "script": "(function execute() {\n\n var reqItemsCount = 0;\n var incidentCount = 0;\n\n // Get incident count\n var incidents = new GlideAggregate('incident');\n incidents.addQuery('active', true);\n\n var incOr = incidents.addQuery('caller_id', vaInputs.user);\n incOr.addOrCondition('u_primary_cntct', vaInputs.user);\n incOr.addOrCondition('opened_by', vaInputs.user);\n\n incidents.addAggregate('COUNT');\n incidents.query();\n if (incidents.next()) {\n incidentCount = incidents.getAggregate('COUNT');\n }\n\n // Get sc_req_item count\n var reqItems = new GlideAggregate('sc_req_item');\n reqItems.addQuery('active', true);\n\n var scReqOr = reqItems.addQuery('request.requested_for', vaInputs.user);\n scReqOr.addOrCondition('request.u_primary_cntct', vaInputs.user);\n scReqOr.addOrCondition('request.opened_by', vaInputs.user);\n\n reqItems.addAggregate('COUNT');\n reqItems.query();\n if (reqItems.next()) {\n reqItemsCount = reqItems.getAggregate('COUNT');\n }\n\n vaVars.incident_count = incidentCount;\n vaVars.requested_item_count = reqItemsCount;\n\n})()\n", "stepType": "ScriptAction", "applicability": { "mode": "query", "value": "" } }, "c243501685354dc6b738e46b8c568318": { "stepType": "ReferenceChoicePrompt", "name": "Show list of tickets", "prompt": { "value": "(function execute() {\n var requesterLang = vaVars.requesterLang;\n var ticketCount = vaVars.count.toFixed(0);\n\n if (parseInt(vaVars.count) > parseInt(vaVars.limit)) {\n return gs.getMessageLang('You have {0} open tickets:', requesterLang, [ticketCount]);\n }\n\n return gs.getMessageLang('Here are your open tickets:', requesterLang);\n})()\n", "mode": "script" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "mode": "query", "value": "" }, "optional": false, "defaultValue": { "value": "", "mode": "simple" }, "variableId": "7efc5bf157f04b168de49e42adccc218", "id": "c243501685354dc6b738e46b8c568318", "mode": "external", "script": "(function execute() {\n /*\n 1. Query the requested items/incident tables and get all user's active items\n 2. Show the 10 recently updated requested items, apply pagination if there are more than 10. (10 is the default limit set in sys_properties)\n */\n\n var count = 0;\n var allTickets = [];\n var requesterLang = vaVars.requesterLang;\n var ticketTables = [{\n 'name': 'sc_req_item',\n 'query': 'request.requested_for=' + vaInputs.user + '^ORrequest.u_primary_cntct=' + vaInputs.user + '^ORrequest.opened_by=' + vaInputs.user,\n }, {\n 'name': 'incident',\n 'query': 'caller_id=' + vaInputs.user + '^ORu_primary_cntct=' + vaInputs.user + '^ORopened_by=' + vaInputs.user,\n }];\n var cnt = 0;\n var now = new GlideDateTime();\n var schedule = new GlideSchedule();\n schedule.load(vaVars.schedule);\n\n for (var i = 0; i < ticketTables.length; i++) {\n var table = ticketTables[i];\n\n var grTicket = new GlideRecord(table.name);\n grTicket.addActiveQuery();\n grTicket.addQuery(table.query);\n grTicket.orderByDesc('sys_updated_on');\n grTicket.query();\n\n count += grTicket.getRowCount();\n vaVars.count = count;\n\n while (grTicket.next()) {\n if (grTicket.canRead()) {\n var ticketSysId = grTicket.getUniqueValue(),\n ticketClass = grTicket.getRecordClassName(),\n ticketNumber = grTicket.getValue('number'),\n ticketUpdated = grTicket.getValue('sys_updated_on'),\n creationField = (ticketClass == 'sc_req_item') ? 'opened_at' : 'sys_created_on',\n start = new GlideDateTime(grTicket.getValue(creationField)),\n duration = schedule.duration(start, now),\n roundedDayPart = duration.getRoundedDayPart(),\n elapsedTime = '';\n\n if (roundedDayPart > 1) {\n elapsedTime = gs.getMessageLang('{0} days ago', requesterLang, [roundedDayPart]);\n } else if (roundedDayPart == 1) {\n elapsedTime = gs.getMessageLang('{0} day ago', requesterLang, [roundedDayPart]);\n } else {\n var durationDv = duration.getDisplayValue();\n elapsedTime = gs.getMessageLang('{0} ago', requesterLang, [durationDv.toLowerCase()]);\n }\n\n var displayFieldValue = (table.name == 'sc_req_item') ? grTicket.getDisplayValue('cat_item') : grTicket.getDisplayValue('short_description');\n if (displayFieldValue.length >= 25) {\n var displayValArr = [displayFieldValue.substring(0, 25), '...'];\n displayFieldValue = displayValArr.join('');\n }\n allTickets.push({ 'value': ticketSysId, 'label': ticketNumber + ': ' + displayFieldValue + ' (opened ' + elapsedTime + ')', 'updated_on': ticketUpdated });\n\n cnt++;\n }\n }\n }\n\n\n var tickets = allTickets\n .sort(function (a, b) { // sort combined array of ritm & inc records by updated timestamp (descending)\n if (GlideDateTime(a.updated_on) > GlideDateTime(b.updated_on)) { return -1 };\n if (GlideDateTime(a.updated_on) < GlideDateTime(b.updated_on)) { return 1 };\n return 0;\n })\n .map(function (item) { // map new array without the 'update_on' property\n var thisTicket = {\n value: item.value,\n label: item.label\n };\n return thisTicket;\n })\n\n return tickets;\n\n})()", "noRecordsResponseMsg": { "mode": "simple", "value": [ { "type": "paragraph", "children": [ { "text": "" }, { "text": "No Records Found" }, { "text": "" } ] } ] }, "condition": { "value": "(function execute() {\n /*\n 1. Query the requested items/incident tables and get all user's active items\n 2. Show the 10 recently updated requested items, apply pagination if there are more than 10. (10 is the default limit set in sys_properties)\n */\n\n var count = 0;\n var allTickets = [];\n var requesterLang = vaVars.requesterLang;\n var ticketTables = [{\n 'name': 'sc_req_item',\n 'query': 'request.requested_for=' + vaInputs.user + '^ORrequest.u_primary_cntct=' + vaInputs.user + '^ORrequest.opened_by=' + vaInputs.user,\n }, {\n 'name': 'incident',\n 'query': 'caller_id=' + vaInputs.user + '^ORu_primary_cntct=' + vaInputs.user + '^ORopened_by=' + vaInputs.user,\n }];\n var cnt = 0;\n var now = new GlideDateTime();\n var schedule = new GlideSchedule();\n schedule.load(vaVars.schedule);\n\n for (var i = 0; i < ticketTables.length; i++) {\n var table = ticketTables[i];\n\n var grTicket = new GlideRecord(table.name);\n grTicket.addActiveQuery();\n grTicket.addQuery(table.query);\n grTicket.orderByDesc('sys_updated_on');\n grTicket.query();\n\n count += grTicket.getRowCount();\n vaVars.count = count;\n\n while (grTicket.next()) {\n if (grTicket.canRead()) {\n var ticketSysId = grTicket.getUniqueValue(),\n ticketClass = grTicket.getRecordClassName(),\n ticketNumber = grTicket.getValue('number'),\n ticketUpdated = grTicket.getValue('sys_updated_on'),\n creationField = (ticketClass == 'sc_req_item') ? 'opened_at' : 'sys_created_on',\n start = new GlideDateTime(grTicket.getValue(creationField)),\n duration = schedule.duration(start, now),\n roundedDayPart = duration.getRoundedDayPart(),\n elapsedTime = '';\n\n if (roundedDayPart > 1) {\n elapsedTime = gs.getMessageLang('{0} days ago', requesterLang, [roundedDayPart]);\n } else if (roundedDayPart == 1) {\n elapsedTime = gs.getMessageLang('{0} day ago', requesterLang, [roundedDayPart]);\n } else {\n var durationDv = duration.getDisplayValue();\n elapsedTime = gs.getMessageLang('{0} ago', requesterLang, [durationDv.toLowerCase()]);\n }\n\n var displayFieldValue = (table.name == 'sc_req_item') ? grTicket.getDisplayValue('cat_item') : grTicket.getDisplayValue('short_description');\n if (displayFieldValue.length >= 25) {\n var displayValArr = [displayFieldValue.substring(0, 25), '...'];\n displayFieldValue = displayValArr.join('');\n }\n allTickets.push({ 'value': ticketSysId, 'label': ticketNumber + ': ' + displayFieldValue + ' (opened ' + elapsedTime + ')', 'updated_on': ticketUpdated });\n\n cnt++;\n }\n }\n }\n\n\n var tickets = allTickets\n .sort(function (a, b) { // sort combined array of ritm & inc records by updated timestamp (descending)\n if (GlideDateTime(a.updated_on) > GlideDateTime(b.updated_on)) { return -1 };\n if (GlideDateTime(a.updated_on) < GlideDateTime(b.updated_on)) { return 1 };\n return 0;\n })\n .map(function (item) { // map new array without the 'update_on' property\n var thisTicket = {\n value: item.value,\n label: item.label\n };\n return thisTicket;\n })\n\n return tickets;\n\n})()", "mode": "external_script" }, "table": "sc_req_item", "withNluUserInput": true, "skipIfFulfilled": true, "entity": { "id": "" }, "skippable": { "value": "", "mode": "query" }, "cardMetadata": { "mode": "card", "metadataScript": "", "cardTemplate": "", "cardFields": {}, "cardDefinition": {} }, "hasCardHeader": false, "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "" }, "eb3d9e437e3247e7ac6b2ac7a278c4a3": { "id": "eb3d9e437e3247e7ac6b2ac7a278c4a3", "stepType": "Decision", "name": "Count Decision", "applicability": { "mode": "query", "value": "" } }, "9e5b50ed9ae14bebb27823eceaddab6e": { "id": "9e5b50ed9ae14bebb27823eceaddab6e", "stepType": "ScriptOutput", "name": "Update Record", "output_type": "single_part", "script": "(function execute() {\n var input = vaInputs.ticket_actions.getValue();\n var response = '';\n vaVars.trigger_Event = true ;\n var requesterLang = vaContext.getRequesterLang();\n var userObject = gs.getUser();\n var userName = gs.getUserName();\n var userFullName = userObject.getFullName();\n var gr = new GlideRecordSecure(vaVars.table_name);\n \n if (gr.get(vaVars.sys_id)) {\n var timestamp = new GlideDateTime();\n var addedComment = vaInputs.comment.getValue().trim();\n\n if (addedComment) {\n if (vaInputs.restrict_comment_ == 'true') {\n var userDispName = gs.getUserDisplayName(vaInputs.user);\n gr.comments = 'Protected information added via Tech Central Chat on ' + timestamp;\n gr.u_restricted_data = timestamp + ' - ' + userDispName + ' (Protected information added via Tech Central Chat):\\n' + addedComment + '\\n_______________\\n\\n' + gr.u_restricted_data;\n } else {\n switch (input) {\n case 'Add Information' : \n gr.comments = addedComment;\n break;\n case 'Request Updated Status' : \n gr.comments = addedComment + '\\n '+ userFullName + ' (' + userName + ')' +'has Requested Updated Status on this ticket.';\n break;\n case 'Request Accelerated Service' : \n if(vaVars.existing_ASR == true)\n {\n gr.comments = addedComment + '\\n '+ userFullName + ' (' + userName + ')' +'has Requested Updated Status on this ticket.';\n }\n else\n {\n gr.comments = userFullName + ' (' + userName + ')' +'has submitted an Accelerated Service Request on this ticket.';\n gr.setValue('u_accelerated_service_request', true);\n }\n break;\n case 'Cancel this Ticket': \n if(vaVars.can_request_cancel == true)\n { \n vaVars.trigger_Event = false;\n gr.comments = addedComment + '\\n '+ 'A cancellation request was submitted for this ticket by ' + userFullName + ' (' + userName + ')' ;\n break;\n }\n else if(vaVars.can_cancel_incident == true)\n {\n \tif (gr.sys_class_name == 'x_cign3_gd_a_ppm_gd_a_ppm_custom') {\n\t\t\t\t \tvaVars.trigger_Event = false;\n\t\t\t \t}\n }\n \n break;\n }\n }\n\n gr.setValue('u_last_portal_action', timestamp);\n gr.update();\n if ( vaVars.trigger_Event == true) {\n\n \t\t\t gs.eventQueue(vaVars.event_name, gr, vaInputs.user.getValue());\n\t \t}\n response = gs.getMessageLang( vaVars.msg_success, requesterLang); \n\n } else {\n response = gs.getMessageLang(\"OK, no comment will be added.\", requesterLang);\n }\n } else {\n response = gs.getMessageLang(\"I couldn't find the record.\", requesterLang);\n }\n\n return response;\n})()", "applicability": { "mode": "query", "value": "" } }, "468ad9c9c14f444fbbe7dfc2c367ced3": { "id": "468ad9c9c14f444fbbe7dfc2c367ced3", "stepType": "Decision", "name": "Decision", "applicability": { "mode": "query", "value": "" } }, "1fed94d09a634e83876ef3b869b914a9": { "id": "1fed94d09a634e83876ef3b869b914a9", "name": "Set Sys Id", "script": "(function execute() {\n vaVars.sys_id = vaInputs.show_list_of_tickets.getValue();\n vaVars.table_name = (vaInputs.show_list_of_tickets.getDisplayValue().indexOf('RITM') != -1 ) ? 'sc_req_item' : 'incident';\n})()\n", "stepType": "ScriptAction", "applicability": { "mode": "query", "value": "" } }, "1664bb86f79a4bc485474efd09a3bac7": { "id": "1664bb86f79a4bc485474efd09a3bac7", "name": "Set Sys Id", "script": "(function execute() {\n // Query the incident/req/sc_req_item table and get the only specified ticket\n\n var tableName = vaVars.table_name;\n var grTicket = new GlideRecord(vaVars.table_name);\n var fromReq = vaVars.displayed_child_ritm > 0;\n\n if (fromReq) { // if this was reached by selection of REQ's child ritm\n gs.info('*********** child_ritm_id detected: ' + vaVars.sys_id);\n grTicket.addQuery('sys_id', vaVars.sys_id);\n\n } else if (vaVars.ticketNumber.length) { // if ticket number was manually entered\n gs.info('*********** ticketNumber detected: ' + vaVars.ticketNumber);\n grTicket.addQuery('number', vaVars.ticketNumber);\n\n } else {\n gs.info('*********** NO child_ritm_id or ticketNumber detected')\n if (tableName == 'incident') {\n var incOr = grTicket.addQuery('caller_id', vaInputs.user);\n incOr.addOrCondition('u_primary_cntct', vaInputs.user);\n incOr.addOrCondition('opened_by', vaInputs.user);\n } else if (tableName == 'sc_request') {\n var scReqOr = grTicket.addQuery('requested_for', vaInputs.user);\n scReqOr.addOrCondition('u_primary_cntct', vaInputs.user);\n scReqOr.addOrCondition('opened_by', vaInputs.user);\n } else { // sc_req_item\n var scReqOr = grTicket.addQuery('request.requested_for', vaInputs.user);\n scReqOr.addOrCondition('request.u_primary_cntct', vaInputs.user);\n scReqOr.addOrCondition('request.opened_by', vaInputs.user);\n }\n\n grTicket.addActiveQuery();\n\n }\n\n grTicket.setLimit(1);\n grTicket.query();\n\n if (grTicket.next()) {\n var thisTicketSysId = grTicket.getUniqueValue();\n vaVars.sys_id = thisTicketSysId;\n\n if (tableName == 'sc_request') {\n vaVars.req_sysid = thisTicketSysId;\n }\n\n if (fromReq) { // if this was reached by selection of REQ's child ritm\n vaVars.child_ritm_number = grTicket.getValue('number');\n }\n\n vaVars.ticketError = '';\n vaVars.errorCount = 0;\n\n } else {\n vaVars.ticketError = 'not found';\n vaVars.errorCount = parseInt(vaVars.errorCount) + 1;\n }\n})()\n", "stepType": "ScriptAction", "applicability": { "mode": "query", "value": "" } }, "f2cf1051a9494d1cb835181b7920256a": { "id": "f2cf1051a9494d1cb835181b7920256a", "stepType": "TextOutput", "name": "Before Card", "value": [ { "value": "(function execute() {\n var requesterLang = vaVars.requesterLang;\n\n if (vaVars.displayed_child_ritm > 0) { // if this was reached by selection of REQ's child ritm\n return gs.getMessageLang('Here\\'s the status of ' + vaVars.child_ritm_number.toUpperCase() + ':', requesterLang)\n }\n\n if (vaVars.ticketNumber) {\n if (vaVars.ticketNumber.length) { //if a ticket number was provided, we don't want to refer to it as \"your ticket,\" as it could be a ticket for someone else.\n return gs.getMessageLang('Here\\'s the status of ' + vaVars.ticketNumber.toUpperCase() + ':', requesterLang)\n }\n } else {\n if (vaVars.table_name == 'incident') {\n if (parseInt(vaVars.count) == 1)\n return gs.getMessageLang('OK, here\\'s the status of your incident:', requesterLang);\n return gs.getMessageLang('Here\\'s the status of your incident:', requesterLang);\n }\n if (vaVars.table_name == 'sc_request') {\n if (parseInt(vaVars.count) == 1)\n return gs.getMessageLang('OK, here\\'s the status of your request:', requesterLang);\n }\n if (vaVars.table_name == 'sc_req_item') {\n if (parseInt(vaVars.count) == 1)\n return gs.getMessageLang('OK, here\\'s the status of your requested item:', requesterLang);\n\n return gs.getMessageLang('Here\\'s the status of your request:', requesterLang);\n }\n if (parseInt(vaVars.count) == 1) {\n return gs.getMessageLang('OK, here\\'s the status of your ticket:', requesterLang);\n }\n }\n return gs.getMessageLang('Here\\'s the status of your ticket:', requesterLang);\n})()\n", "mode": "script" } ], "applicability": { "mode": "query", "value": "" }, "secure": false, "requestFeedback": true }, "016ec6fc6365485f8098c33fd7aa7dec": { "id": "016ec6fc6365485f8098c33fd7aa7dec", "stepType": "Decision", "name": "Table name", "applicability": { "mode": "query", "value": "" } }, "7b212f3837a24d2eb4699874823d3685": { "id": "7b212f3837a24d2eb4699874823d3685", "stepType": "Component", "name": "No Deflection", "fields": [], "reusableTopicId": "7fb4ca055303201033cdddeeff7b12b3", "reusableTopicChoice": "Deflection", "sourceType": "TOPIC_BLOCK", "loading": false, "applicability": { "value": "", "mode": "query" }, "inputs": { "deflection_configuration": { "value": "5292005253213010000dddeeff7b126c", "mode": "string", "type": "Reference", "table": "ssa_deflection_configuration" }, "deflection_pattern": { "value": "9ee3409253213010000dddeeff7b123b", "mode": "string", "type": "Reference", "table": "ssa_deflection_pattern" }, "activity_table": { "value": "", "mode": "simple", "type": "String" }, "activity_ids": { "value": "", "mode": "simple", "type": "String" } }, "outputs": [], "outdatedNote": false, "variableIds": [] }, "de5f3474f4b94ca2bed895427d0dd362": { "id": "de5f3474f4b94ca2bed895427d0dd362", "stepType": "Component", "name": "Deflection: Status Provided", "fields": [], "reusableTopicId": "7fb4ca055303201033cdddeeff7b12b3", "reusableTopicChoice": "Deflection", "sourceType": "TOPIC_BLOCK", "loading": false, "applicability": { "value": "", "mode": "query" }, "inputs": { "deflection_configuration": { "value": "70f49ddb87ee8e14a39b87bd0ebb35ba", "mode": "string", "type": "Reference", "table": "ssa_deflection_configuration" }, "deflection_pattern": { "value": "7755d19f87ee8e14a39b87bd0ebb351f", "mode": "string", "type": "Reference", "table": "ssa_deflection_pattern" }, "activity_table": { "value": "", "mode": "simple", "type": "String" }, "activity_ids": { "value": "", "mode": "simple", "type": "String" } }, "outputs": [], "outdatedNote": false, "variableIds": [] }, "9778d2dd61f94427a3fdb98f5181d5c5": { "id": "9778d2dd61f94427a3fdb98f5181d5c5", "stepType": "ScriptOutput", "name": "RITM card", "output_type": "single_part", "script": "(function execute() {\n\n var tableName = vaVars.table_name;\n var recordId = vaVars.sys_id;\n var requesterLang = vaVars.requesterLang;\n var link = '';\n var screenId = '';\n if (vaVars.portalName === 'mesp') {\n var mobileDLink = new global.MobileDeepLinkGenerator('request');\n link = mobileDLink.getFormScreenLink('7516f9d787232300e0ef0cf888cb0b4d', tableName, recordId);\n } else {\n link = vaVars.baseUri + vaVars.portalName + '?id=ticket&table=' + tableName + '&sys_id=' + recordId;\n }\n\n var title = '';\n var subtitle = '';\n var fields = [];\n\n var gr = new GlideRecord(tableName);\n if (gr.get(recordId)) {\n\n title = gr.getClassDisplayValue();\n subtitle = gr.number.toString() + '➚';\n\n var ticketState = gr.getDisplayValue('state').toString();\n if (gr.approval.toString() == 'requested' && (gr.stage == 'waiting_for_approval' || gr.stage == 'Waiting for Approval')) {\n ticketState += ' - Waiting for approval';\n }\n fields.push({ 'fieldLabel': gr.getElement('state').getLabel(), 'fieldValue': ticketState });\n fields.push({ 'fieldLabel': gr.getElement('cat_item').getLabel(), 'fieldValue': gr.getDisplayValue('cat_item').toString() });\n\n\n if (!gs.nil(gr.getDisplayValue('assigned_to').toString())) {\n fields.push({ 'fieldLabel': gr.getElement('assigned_to').getLabel(), 'fieldValue': gr.getDisplayValue('assigned_to').toString() });\n }\n fields.push({ 'fieldLabel': gr.getElement('sys_updated_on').getLabel(), 'fieldValue': gr.getDisplayValue('sys_updated_on').toString() });\n\n\n var count = 0;\n var now = new GlideDateTime();\n var schedule = new GlideSchedule();\n schedule.load(vaVars.schedule);\n\n var grComments = new GlideRecord('sys_journal_field');\n grComments.addQuery('element_id', recordId);\n grComments.addQuery('name', tableName);\n grComments.addQuery('element', 'comments');\n grComments.orderByDesc('sys_created_on');\n grComments.setLimit(vaVars.max_comment_count);\n grComments.query();\n while (grComments.next()) {\n var commenter = [];\n var user = new GlideRecord('sys_user');\n user.get('user_name', grComments.sys_created_by);\n var userName = (grComments.sys_created_by.toString() == 'system') ? 'System' : user.getDisplayValue('name');\n commenter.push(userName);\n\n var start = new GlideDateTime(grComments.getValue('sys_created_on'));\n var duration = schedule.duration(start, now);\n var roundedDayPart = duration.getRoundedDayPart();\n if (roundedDayPart > 1) {\n var elapsedTime = gs.getMessageLang('{0} days ago', requesterLang, [roundedDayPart]);\n } else if (roundedDayPart == 1) {\n var elapsedTime = gs.getMessageLang('{0} day ago', requesterLang, [roundedDayPart]);\n } else {\n var durationDv = duration.getDisplayValue();\n var elapsedTime = gs.getMessageLang('{0} ago', requesterLang, [durationDv.toLowerCase()]);\n }\n var comment = grComments.value.replace(/<\\/?[^>]+(>|$)/g, '');\n var comments = [commenter, ' - ', elapsedTime, ' : ', comment];\n var displayComments = comments.join('');\n if (displayComments.length >= vaVars.comments_length) {\n var editComments = [displayComments.substring(0, vaVars.comments_length), '...'];\n displayComments = editComments.join('');\n }\n\n if (count == 0) {\n fields.push({ 'fieldLabel': gr.getElement('comments').getLabel(), 'fieldValue': displayComments });\n } else {\n fields.push({ 'fieldValue': displayComments });\n }\n count++;\n }\n }\n\n var card_data = JSON.stringify({\n 'title': title,\n 'subtitle': subtitle,\n 'fields': fields,\n 'url': link.toString()\n });\n return vaSystem.renderCard('Card', card_data);\n})()\n", "applicability": { "value": "", "mode": "query" } }, "bcb5c006847d46abbc812494b0664cac": { "id": "bcb5c006847d46abbc812494b0664cac", "stepType": "ScriptOutput", "name": "INC card", "output_type": "single_part", "script": "(function execute() {\n\n var tableName = vaVars.table_name;\n var recordId = vaVars.sys_id;\n var requesterLang = vaVars.requesterLang;\n var link = '';\n var screenId = '';\n if (vaVars.portalName === 'mesp') {\n var mobileDLink = new global.MobileDeepLinkGenerator('request');\n link = mobileDLink.getFormScreenLink('ebb94d9c0f2033001befa68ca8767e4e', tableName, recordId);\n } else {\n link = vaVars.baseUri + vaVars.portalName + '?id=ticket&table=' + tableName + '&sys_id=' + recordId;\n }\n\n var title = '';\n var subtitle = '';\n var fields = [];\n\n var gr = new GlideRecord('incident');\n if (gr.get(recordId)) {\n\n title = gr.getClassDisplayValue();\n subtitle = gr.number.toString() + '➚';\n\n if (!gs.nil(gr.getDisplayValue('short_description').toString())) {\n fields.push({ 'fieldLabel': gr.getElement('short_description').getLabel(), 'fieldValue': gr.getDisplayValue('short_description').toString() });\n }\n fields.push({ 'fieldLabel': gr.getElement('state').getLabel(), 'fieldValue': gr.getDisplayValue('state').toString() });\n if (!gs.nil(gr.getDisplayValue('assigned_to').toString())) {\n fields.push({ 'fieldLabel': gr.getElement('assigned_to').getLabel(), 'fieldValue': gr.getDisplayValue('assigned_to').toString() });\n }\n fields.push({ 'fieldLabel': gr.getElement('sys_updated_on').getLabel(), 'fieldValue': gr.getDisplayValue('sys_updated_on').toString() });\n\n var count = 0;\n var now = new GlideDateTime();\n var schedule = new GlideSchedule();\n schedule.load(vaVars.schedule);\n \n var grComments = new GlideRecord('sys_journal_field');\n grComments.addQuery('element_id', recordId);\n grComments.addQuery('name', tableName);\n grComments.addQuery('element', 'comments');\n grComments.orderByDesc('sys_created_on');\n grComments.setLimit(vaVars.max_comment_count);\n grComments.query();\n while (grComments.next()) {\n var commenter = [];\n var user = new GlideRecord('sys_user');\n user.get('user_name', grComments.sys_created_by);\n var userName = (grComments.sys_created_by.toString() == 'system') ? 'System' : user.getDisplayValue('name');\n commenter.push(userName);\n var start = new GlideDateTime(grComments.getValue('sys_created_on'));\n var duration = schedule.duration(start, now);\n if (duration.getRoundedDayPart() > 1) {\n var elapsedTime = gs.getMessageLang('{0} days ago', requesterLang, [duration.getRoundedDayPart()]);\n } else if (duration.getRoundedDayPart() == 1) {\n var elapsedTime = gs.getMessageLang('{0} day ago', requesterLang, [duration.getRoundedDayPart()]);\n } else {\n var durationDv = duration.getDisplayValue();\n var elapsedTime = gs.getMessageLang('{0} ago', requesterLang, [durationDv.toLowerCase()]);\n }\n var comment = grComments.value.replace(/<\\/?[^>]+(>|$)/g, '');\n var comments = [commenter, ' - ', elapsedTime, ' : ', comment];\n var displayComments = comments.join('');\n if (displayComments.length >= vaVars.comments_length) {\n var editComments = [displayComments.substring(0, vaVars.comments_length), '...'];\n displayComments = editComments.join('');\n }\n\n if (count == 0) {\n fields.push({ 'fieldLabel': gr.getElement('comments').getLabel(), 'fieldValue': displayComments });\n } else {\n fields.push({ 'fieldValue': displayComments });\n }\n count++;\n }\n }\n\n var card_data = JSON.stringify({\n 'title': title,\n 'subtitle': subtitle,\n 'fields': fields,\n 'url': link.toString()\n });\n return vaSystem.renderCard('Card', card_data);\n})()\n", "applicability": { "value": "", "mode": "query" } }, "204af30ba0b6489aaacf31dec0c96610": { "id": "204af30ba0b6489aaacf31dec0c96610", "stepType": "TextPrompt", "name": "Get ticket number", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "Please enter the ticket number" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "mode": "script", "value": "(function execute() {\n /* Return true or false to indicate if the topic or topic node can run\n and be discoverable (or not). For example:\n\n var applicability = vaInputs.first_name == 'Bill' ? true : false;\n return applicability;\n */\n return false;\n})()\n" }, "skippable": { "mode": "script", "value": "" }, "defaultValue": { "value": [ { "type": "paragraph", "children": [ { "text": "" } ] } ], "mode": "simple" }, "withNluUserInput": false, "skipIfFulfilled": true, "variableId": "5591450a36b74510822ffb2d5b072a9a", "inputType": { "format": "Text", "script": "" }, "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "", "requestFeedback": true }, "71aab37c01e24e98b2fcab331e6940ad": { "id": "71aab37c01e24e98b2fcab331e6940ad", "stepType": "TextPrompt", "name": "Manual ticket number", "prompt": { "value": "(function execute() {\n\n if (vaVars.ticketError == 'not found') {\n return gs.getMessageLang('I did not find a ticket matching {0}. Please enter a valid ticket number', vaVars.requesterLang, [vaVars.ticketNumber]);\n }\n\n return gs.getMessageLang('What is the ticket number?', vaVars.requesterLang);\n\n})()\n", "mode": "script" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "withNluUserInput": false, "skipIfFulfilled": true, "variableId": "82d02096829544329b0575f4929087b2", "inputType": { "format": "Text", "script": "" }, "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "", "requestFeedback": true }, "cb829b6594bc43199f2199b0f2fd9bc3": { "id": "cb829b6594bc43199f2199b0f2fd9bc3", "name": "Set ticket number and table", "script": "(function execute() {\n\n var ticketNum = vaInputs.manual_ticket_number.getValue();\n vaVars.ticketNumber = ticketNum;\n\n vaVars.incident_count = 0;\n vaVars.requested_item_count = 0;\n vaVars.request_count = 0;\n\n if (ticketNum.indexOf('RITM') != -1 ) {\n vaVars.table_name = 'sc_req_item';\n vaVars.requested_item_count = 1;\n\n } else if (ticketNum.indexOf('REQ') != -1 ){\n vaVars.table_name = 'sc_request';\n vaVars.req_number = ticketNum;\n vaVars.request_count = 1;\n } else {\n vaVars.table_name = 'incident';\n vaVars.incident_count = 1;\n }\n\n // vaVars.incident_count = (vaVars.table_name == 'incident') ? 1 : 0;\n // vaVars.requested_item_count = (vaVars.table_name == 'sc_req_item') ? 1 : 0;\n // vaVars.imt_inc_count(vaVars.table_name == 'incident') ? 1 : 0;\n\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "ff36d91dd745479e8f2d1879eb1d5ef4": { "stepType": "ChoicePrompt", "name": "Search or Show My Tickets", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "What would you like to do?" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "mode": "script", "value": "(function execute() {\n var promptOptions = (vaVars.skip_manual_search_prompt != 'yes');\n return promptOptions;\n})()\n" }, "skippable": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "variableId": "23c1b98ebdc44201bccd0e25b207d28d", "id": "ff36d91dd745479e8f2d1879eb1d5ef4", "hasCardHeader": false, "cardMetadata": { "mode": "card", "metadataScript": "", "cardTemplate": "", "cardFields": {}, "cardDefinition": {} }, "withNluUserInput": false, "skipIfFulfilled": false, "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "" }, "570e3ddba88d4acc968a50b76073bafe": { "id": "570e3ddba88d4acc968a50b76073bafe", "stepType": "Decision", "name": "Choose an option" }, "749c240ea6824e83ab3e9391c915a430": { "id": "749c240ea6824e83ab3e9391c915a430", "stepType": "BooleanPrompt", "name": "No ticket, prompt for manual", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "You have no active incidents or requested items. Would you like to search for a ticket by number?" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "withNluUserInput": false, "skipIfFulfilled": false, "variableId": "dc4537990bc34aabad7835243ec79b72", "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "" }, "7b1fed999d3447159f4730b64fa9e919": { "id": "7b1fed999d3447159f4730b64fa9e919", "stepType": "Decision", "name": "Decision" }, "6cb6f216c68a40f2bd268ba80d637a67": { "id": "6cb6f216c68a40f2bd268ba80d637a67", "stepType": "Decision", "name": "Was ticket found?" }, "a0c704f4986f4f08bfb8f3426e19285b": { "stepType": "ChoicePrompt", "name": "Confirm intent", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "I'm having trouble finding that ticket. What would you like to do?" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "variableId": "501f4be04d924743a4c6cc44699b0920", "id": "a0c704f4986f4f08bfb8f3426e19285b", "hasCardHeader": false, "cardMetadata": { "mode": "card", "metadataScript": "", "cardTemplate": "", "cardFields": {}, "cardDefinition": {} }, "withNluUserInput": false, "skipIfFulfilled": false, "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "" }, "78a679afb2c74cf28f1dbd924d790d63": { "id": "78a679afb2c74cf28f1dbd924d790d63", "stepType": "Decision", "name": "Decision" }, "a0a35bb819bc4dffbaf9fcc6e18aa959": { "id": "a0a35bb819bc4dffbaf9fcc6e18aa959", "name": "Reset errors", "script": "(function execute() {\n\nvaVars.ticketError = '';\nvaVars.errorCount = 0;\n\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "9e1caa087fba433e9e62c249c8826034": { "id": "9e1caa087fba433e9e62c249c8826034", "name": "Reset initial selection", "script": "(function execute() {\n vaVars.ticketNumber = ''; // prevent \"my tickets\" prompt from using invalid manual entry to pull single record again\n vaVars.skip_manual_search_prompt = 'yes'; // skip initial prompt to search for manual ticket and immediatly follow \"Show my open tickets\" branch\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "3decae531c5c44218ad6c4084e424ea8": { "id": "3decae531c5c44218ad6c4084e424ea8", "stepType": "BooleanPrompt", "name": "Restrict comment?", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "Will this comment contain sensitive or confidential data?" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "withNluUserInput": false, "skipIfFulfilled": false, "variableId": "2a41316269914783a8da9743f1c7eb0e", "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "" }, "c3bb1fbd4b3a4a55a1125ab71c6aef28": { "id": "c3bb1fbd4b3a4a55a1125ab71c6aef28", "stepType": "TextPrompt", "name": "Comment", "prompt": { "value": "(function execute() {\n \n var input = vaInputs.ticket_actions.getValue();\n vaVars.trigger_Event = true ;\n switch (input) {\n\n case 'Add Information' : \n vaVars.msg_success = \"Successfully added information to ticket.\";\n vaVars.event_name = \"task.add.info\";\n return gs.getMessageLang(\"Enter the information you would like to add to the ticket.\");\n break;\n\n case \"Request Updated Status\" : \n vaVars.msg_success = \"Ticket status update was requested.\"; \n vaVars.event_name = \"task.request.updated.status\";\n return gs.getMessageLang(\"Please enter the necessary information to request an updated status on this ticket.\");\n break;\n \n case 'Request Accelerated Service': \n if(vaVars.existing_ASR == true)\n {\n vaVars.msg_success = \"Ticket status update was requested.\"; \n vaVars.event_name = \"task.request.updated.status\";\n return gs.getMessageLang(\"Please enter the necessary information to request an updated status on this ticket.\");\n }\n else{\n vaVars.event_name = \"task.request.asr\";\n vaVars.msg_success = \"Accelerated Service Request was successfully submitted.\";\n return gs.getMessageLang(\"Enter comments to request accelerated service.\");\n }\n break;\n\n case 'Cancel this Ticket': \n if(vaVars.can_request_cancel == true)\n { \n \t\n vaVars.event_name = \"task.cancel.ticket\"; \n vaVars.msg_success = \"Your request to cancel this ticket was successfully submitted.\";\n }\n else if(vaVars.can_cancel_incident == true)\n {\n vaVars.event_name = \"task.cancel.ticket\";\n vaVars.msg_success = \"This ticket was successfully canceled.\";\n }\n return gs.getMessageLang(\"Can you please give me the reason for this cancellation ?\");\n break;\n\n }\n \n\n})()\n", "mode": "script" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "mode": "query", "value": "" }, "optional": false, "defaultValue": { "value": "", "mode": "simple" }, "variableId": "67b0606c2b9d4701a850902975492c82", "withNluUserInput": false, "skipIfFulfilled": false, "entity": { "id": "" }, "skippable": { "value": "", "mode": "query" }, "inputType": { "format": "Text", "script": "" }, "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "", "requestFeedback": true }, "310a74fe701549c8855dfe4ee472b58c": { "id": "310a74fe701549c8855dfe4ee472b58c", "name": "Count total open tickets", "script": "(function execute() {\n var totalCount = parseInt(vaVars.requested_item_count) + parseInt(vaVars.incident_count);\n\n if (totalCount == 1) {\n\n if (parseInt(vaVars.requested_item_count) > 0) {\n vaVars.table_name = 'sc_req_item';\n }\n\n if (parseInt(vaVars.incident_count) > 0) {\n vaVars.table_name = 'incident';\n }\n }\n\n vaVars.count = totalCount;\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "6b58467603a741838c6c5eefc56b139e": { "id": "6b58467603a741838c6c5eefc56b139e", "name": "store provided number", "script": "(function execute() {\n var ticketNum = vaInputs.get_ticket_number;\n vaVars.ticketNumber = ticketNum + '';\n\n vaVars.incident_count = 0;\n vaVars.requested_item_count = 0;\n vaVars.request_count = 0;\n \n\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "6bbc1f0c5e584504908b2650656ebb43": { "id": "6bbc1f0c5e584504908b2650656ebb43", "stepType": "Decision", "name": "Was ticket # captured?" }, "4191fc1e146245548b6330977a2d0048": { "id": "4191fc1e146245548b6330977a2d0048", "stepType": "ScriptOutput", "name": "REQ Card", "output_type": "single_part", "script": "(function execute() {\n\n var tableName = vaVars.table_name;\n var recordId = vaVars.req_sysid;\n var requesterLang = vaVars.requesterLang;\n var link = '';\n var screenId = '';\n if (vaVars.portalName === 'mesp') {\n var mobileDLink = new global.MobileDeepLinkGenerator('request');\n link = mobileDLink.getFormScreenLink('276dd3edb79033001befcd58de11a9c7', tableName, recordId);\n } else {\n link = vaVars.baseUri + vaVars.portalName + '?id=order_status&table=' + tableName + '&sys_id=' + recordId;\n }\n\n var title = '';\n var subtitle = '';\n var fields = [];\n\n var showEstimatedDelivery = false;\n var childrenCount = 0;\n\n var gr = new GlideRecord(tableName);\n if (gr.get(recordId)) {\n\n\n title = gr.getClassDisplayValue();\n subtitle = gr.number.toString() + '➚';\n\n var ticketState = gr.getDisplayValue('state').toString();\n\n fields.push({ 'fieldLabel': gr.getElement('state').getLabel(), 'fieldValue': ticketState });\n // fields.push({ 'fieldLabel': gr.getElement('opened_by').getLabel(), 'fieldValue': gr.getDisplayValue('opened_by').toString() });\n\n fields.push({ 'fieldLabel': gr.getElement('requested_for').getLabel(), 'fieldValue': gr.getDisplayValue('requested_for').toString() });\n\n\n var reqItemGr = new GlideRecord('sc_req_item');\n reqItemGr.addQuery('request', recordId);\n reqItemGr.query();\n \n var childrenCount = reqItemGr.getRowCount();\n\n while (reqItemGr.next()) {\n var catItem = new sn_sc.CatItem(reqItemGr.cat_item).getItemSummary(true);\n\n if (catItem.show_delivery_time)\n showEstimatedDelivery = true;\n\n }\n\n }\n\n if (showEstimatedDelivery) {\n var reqRecord = GlideappRequestNew.get(recordId);\n fields.push({ 'fieldLabel': 'Estimated Delivery', 'fieldValue': reqRecord.getLongestDueDate() });\n\n }\n if (childrenCount > 0) {\n fields.push({ 'fieldLabel': 'Items', 'fieldValue': childrenCount });\n }\n\n var card_data = JSON.stringify({\n 'title': title,\n 'subtitle': subtitle,\n 'fields': fields,\n 'url': link.toString()\n });\n return vaSystem.renderCard('Card', card_data);\n})()", "applicability": { "value": "", "mode": "query" } }, "b48a1a33a1be4df4b02431260559f985": { "id": "b48a1a33a1be4df4b02431260559f985", "stepType": "Decision", "name": "Decision" }, "991984825905453eac4bb1a98aba10e4": { "id": "991984825905453eac4bb1a98aba10e4", "stepType": "BooleanPrompt", "name": "View child ritms", "prompt": { "value": "(function execute() {\n\n var question = 'Would you like to see the' + (vaVars.displayed_child_ritm > 0 ? ' other ' : ' ') + 'items (RITMs) in this request?';\n\n return gs.getMessageLang(question, vaContext.getRequesterLang());\n\n\n})()\n", "mode": "script" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "withNluUserInput": false, "skipIfFulfilled": false, "variableId": "051ea580e27547b793f137c495bb48b1", "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "" }, "cbc7836090474d9da4ad99ae12449781": { "id": "cbc7836090474d9da4ad99ae12449781", "stepType": "Decision", "name": "Decision" }, "0de5bca7454748988cdaf72d157444f7": { "stepType": "ReferenceChoicePrompt", "name": "Choose child RITM", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "Here are all the items in " }, { "type": "datapill", "dataPill": { "value": "{{vaVars.req_number}}", "displayValue": "Script Variables➛req_number" }, "children": [ { "text": "" } ] }, { "text": "" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "variableId": "d814c464077c4bdf8121766643a62bdb", "id": "0de5bca7454748988cdaf72d157444f7", "mode": "external", "script": "(function execute() {\n var options = [];\n\n var reqItemGr = new GlideRecord('sc_req_item');\n reqItemGr.addQuery('request', vaVars.req_sysid);\n reqItemGr.query();\n\n while (reqItemGr.next()) {\n\n var short_desc = reqItemGr.getDisplayValue('short_description')\n if (short_desc.length >= 25) {\n var displayValArr = [short_desc.substring(0, 25), '...'];\n short_desc = displayValArr.join('');\n }\n\n options.push({\n 'value': reqItemGr.getUniqueValue(),\n 'label': reqItemGr.number + ': ' + short_desc,\n 'render_style': 'data'\n });\n\n }\n\n options.push({\n 'value': 'cancel',\n 'label': 'Never mind, I\\'m done.',\n 'render_style': 'data'\n })\n\n\n return options;\n})()\n", "metadataScript": "", "cardData": {}, "noRecordsResponseMsg": { "value": [ { "type": "paragraph", "children": [ { "text": "I didn't find any RITMs under that request." } ] } ], "mode": "simple" }, "condition": { "value": "(function execute() {\n var options = [];\n\n var reqItemGr = new GlideRecord('sc_req_item');\n reqItemGr.addQuery('request', vaVars.req_sysid);\n reqItemGr.query();\n\n while (reqItemGr.next()) {\n\n var short_desc = reqItemGr.getDisplayValue('short_description')\n if (short_desc.length >= 25) {\n var displayValArr = [short_desc.substring(0, 25), '...'];\n short_desc = displayValArr.join('');\n }\n\n options.push({\n 'value': reqItemGr.getUniqueValue(),\n 'label': reqItemGr.number + ': ' + short_desc,\n 'render_style': 'data'\n });\n\n }\n\n options.push({\n 'value': 'cancel',\n 'label': 'Never mind, I\\'m done.',\n 'render_style': 'data'\n })\n\n\n return options;\n})()\n", "mode": "external_script" }, "hasCardHeader": false, "cardMetadata": { "mode": "card", "metadataScript": "", "cardTemplate": "", "cardFields": {}, "cardDefinition": {} }, "withNluUserInput": false, "skipIfFulfilled": false, "skipReprompt": { "value": "", "mode": "query" }, "detailDescription": "" }, "4c1d97162e6742e6895d3c2fa05c22c5": { "id": "4c1d97162e6742e6895d3c2fa05c22c5", "stepType": "Decision", "name": "Decision" }, "74e28b57a52d4aaf83357c416d533f09": { "id": "74e28b57a52d4aaf83357c416d533f09", "name": "Set child ritm table and id", "script": "(function execute() {\n\n vaVars.table_name = 'sc_req_item';\n vaVars.sys_id = vaInputs.choose_child_ritm.getValue();\n\n vaVars.displayed_child_ritm = vaVars.displayed_child_ritm + 1;\n\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "3863d10d993c47c1ac7ca5ee981cfdd6": { "id": "3863d10d993c47c1ac7ca5ee981cfdd6", "stepType": "Decision", "name": "Child from REQ?" }, "e7bb21d34ff8446382b9cdbad619ed0a": { "id": "e7bb21d34ff8446382b9cdbad619ed0a", "stepType": "ReusableTopic", "name": "Transfer To Agent", "fields": [], "applicability": { "value": "", "mode": "query" }, "reusableTopicChoice": "TC - Transfer to Agent", "reusableTopicId": "f261d82f83bbb150fa225d78beaad3e1", "inputs": { "show_message": { "value": "true", "mode": "string", "type": "True/False" }, "confirm_transfer": { "value": "false", "mode": "string", "type": "True/False" }, "deflection_type": { "value": [ { "type": "paragraph", "children": [ { "text": "e3323b4987be8a9419357485dabb35c8" } ] } ], "mode": "string", "type": "String" }, "chat_queue": { "value": "", "mode": "simple", "type": "String" } }, "variableIds": [], "outputs": [], "outdatedNote": false, "loading": false, "useTemplateTopic": false, "dynamicTopicBlockName": { "value": "", "mode": "simple" }, "inputDynamicModal": {}, "outputDynamicModal": {} }, "a24a36da2d1c4661a2fd80cde7b51739": { "id": "a24a36da2d1c4661a2fd80cde7b51739", "name": "Unbind ticket number entity ", "script": "(function execute() {\n\n vaInputs.manual_ticket_number.unbindEntity();\n\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "d1f2b825e4ef4d27a932d6c495406346": { "id": "d1f2b825e4ef4d27a932d6c495406346", "stepType": "Decision", "name": "Decision" }, "fe86fcd1425e4bff8f06725f76cab7ac": { "id": "fe86fcd1425e4bff8f06725f76cab7ac", "stepType": "Decision", "name": "Decision" }, "70a790428cd44d728b2d224cbfed6502": { "id": "70a790428cd44d728b2d224cbfed6502", "stepType": "TextOutput", "name": "Inactive records", "secure": false, "value": [ { "value": [ { "type": "paragraph", "children": [ { "text": "This is an Inactive record" } ] } ], "mode": "simple", "_key": "d29ad0cb557346ddb995b766822a53c1" } ], "requestFeedback": true, "applicability": { "value": "", "mode": "query" } }, "cab73d0ac2e0469f832064605802f577": { "id": "cab73d0ac2e0469f832064605802f577", "name": "Incident Ticket status", "script": "(function execute() {\n \n vaVars.show_actions = true;\n vaVars.within_SLA = true;\n vaVars.Is_Active = true;\n vaVars.high_priority = false;\n vaVars.pending_info = false;\n vaVars.can_cancel_incident= false;\n vaVars.can_request_cancel = false;\n vaVars.can_add_info = false;\n vaVars.can_request_update = false;\n vaVars.can_request_asr = false;\n vaVars.existing_ASR = false;\n vaVars.show_ASR = false;\n \n // vaVars.showAutomatedActions_ = false;\n\n var isActiveTicket = true;\n var tableName = vaVars.table_name;\n var recordId = vaVars.sys_id;\n\n if(tableName == 'incident' )\n {\n var grTicket = new GlideRecord(tableName);\n if (grTicket.get(recordId)) {\n if (grTicket.active == false) {\n vaVars.Is_Active = false;\n }\n var incidentUtils = new global.IncidentUtils();\n var actions = incidentUtils.getPortalIncidentActions(grTicket, vaInputs.user);\n var info = actions.info;\n \n //vaVars.can_reopen = actions.can_reopen;\n // vaVars.can_also_report = inf.can_also_report;\n\n vaVars.show_actions = actions.show_actions;\n vaVars.can_cancel_incident = actions.can_cancel_incident;\n vaVars.can_request_cancel = actions.can_request_cancel;\n vaVars.can_add_info = actions.can_add_info;\n vaVars.can_request_update = actions.can_request_update;\n vaVars.can_request_asr = actions.can_request_asr;\n vaVars.high_priority = actions.high_priority;\n vaVars.outside_SLA = info.sla_breached;\n vaVars.within_SLA = !info.sla_breached;\n vaVars.pending_info = info.pending_info;\n vaVars.existing_ASR = info.existing_asr;\n vaVars.show_ASR = (vaVars.can_request_asr && !vaVars.high_priority);\n \n }\n }\n\n if( vaVars.Is_Active = true) \n { \n vaVars.option = 'add information';\n } \n else\n {\n vaVars.option ='inactive';\n } \n\n return (vaVars.option); \n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "21984d4485c8494eb768da3b51dee007": { "id": "21984d4485c8494eb768da3b51dee007", "name": "RITM Ticket Status", "script": "(function execute() {\n\n vaVars.show_actions = true;\n vaVars.can_cancel_automated = false;\n vaVars.can_order_again = false;\n vaVars.within_SLA = true;\n vaVars.Is_Active = true;\n vaVars.high_priority = false;\n vaVars.pending_info = false;\n vaVars.can_cancel_ritm = false;\n vaVars.can_request_cancel = false;\n vaVars.can_add_info = false;\n vaVars.can_request_update = false;\n vaVars.can_request_asr = false;\n vaVars.existing_ASR = false;\n vaVars.show_ASR = false;\n var cat = '';\n // vaVars.showAutomatedActions_ = false;\n\n var isActiveTicket = true;\n var tableName = vaVars.table_name;\n var recordId = vaVars.sys_id;\n\n if(tableName == 'sc_req_item' )\n {\n var grTicket = new GlideRecord(tableName);\n if (grTicket.get(recordId)) {\n if (grTicket.active == false) {\n vaVars.Is_Active = false;\n }\n vaVars.cat_item = grTicket.getValue('cat_item');\n // vaVars.cat_item = \"https://cignadev1.service-now.com/esp?%3Fid=sc_cat_item&sys_id=\"+ cat;\n var requestUtils = new global.ReqItemUtils(grTicket);\n var actions = requestUtils.getPortalRitmActions(vaInputs.user);\n var info = actions.info;\n \n //vaVars.can_reopen = actions.can_reopen;\n // vaVars.can_also_report = inf.can_also_report;\n \n vaVars.show_actions = actions.show_actions;\n vaVars.can_cancel_automated = actions.can_cancel_automated;\n vaVars.can_cancel_ritm = actions.can_cancel_incident;\n vaVars.can_request_cancel = actions.can_request_cancel;\n vaVars.can_add_info = actions.can_add_info;\n vaVars.can_request_update = actions.can_request_update;\n vaVars.can_request_asr = actions.can_request_asr;\n vaVars.can_order_again = actions.can_order_again;\n vaVars.high_priority = actions.high_priority;\n vaVars.outside_SLA = info.sla_breached;\n vaVars.within_SLA = !info.sla_breached;\n vaVars.pending_info = info.pending_info;\n vaVars.existing_ASR = info.existing_asr;\n \n }\n }\n\n if( vaVars.Is_Active = true) \n { \n vaVars.option = 'add information';\n } \n else\n {\n vaVars.option ='inactive';\n } \n\n return (vaVars.option); \n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "c3b98b3216fb4d0e99861ee158b68dea": { "id": "c3b98b3216fb4d0e99861ee158b68dea", "stepType": "ScriptOutput", "name": "Cancel this ticket", "output_type": "single_part", "script": "(function execute() {\n\n //vaVars.Option_type = 'cancel the ticket';\n var tableName = vaVars.table_name;\n var recordId = vaVars.sys_id;\n var gr = new GlideRecord(tableName);\n if (gr.get(recordId)) {\n \n // if (vaVars.can_request_cancel == true) { // If conditions are not met to allow cancellation, add cancelltion request notes to RITM instead\n // gr.comments = 'A cancellation request was submitted for this ticket';\n // gr.setValue('u_last_portal_action', new GlideDateTime());\n // gr.update();\n // }\n \n if(tableName == 'incident')\n {\n if ( vaVars.can_cancel_incident == true) { // If conditions are met to allow cancellation, cancel RITM and add comments \n gr.setValue('u_last_portal_action', new GlideDateTime());\n gr.setValue('state', 4);\n gr.setValue('approval', 'withdrawn');\n gr.setValue('stage', 'Request Cancelled');\n gr.active = false;\n gr.comments = \"Requested Item cancelled by \" + gs.getUserDisplayName();\n gr.update();\n } \n }\n \n if(tableName == 'sc_req_item')\n {\n if ( vaVars.can_cancel_ritm == true) { // If conditions are met to allow cancellation, cancel RITM and add comments \n gr.setValue('close_notes', 'Canceled by Customer');\n gr.setValue('state', 4); // Cancelled\n gr.setValue('approval', 'withdrawn');\n gr.setValue('stage', 'Request Cancelled');\n gr.active = false;\n gr.comments = \"Requested Item cancelled by \" + gs.getUserDisplayName();\n gr.update();\n } \n\n if ( vaVars.can_cancel_automated == true) { // If conditions are met to allow cancellation, cancel RITM and add comments \n var sctask;\n var templates = ['TC - Core - Automated Ticket Cancellation Request - 1', 'TC - Core - Automated Ticket Cancellation Request - 2'];\n for (var i = 0, l = templates.length; i < l; i++) {\n var scTaskGr = new GlideRecord('sc_task');\n scTaskGr.initialize();\n scTaskGr.request_item = vaVars.sys_id; // Associate with RITM\n scTaskGr.applyTemplate(templates[i]); // Apply the template\n sctask = scTaskGr.insert();\n }\n } \n\n }\n }\n \n})()\n", "applicability": { "value": "", "mode": "query" } }, "473aab0f6045417ab99471a3164e10d4": { "name": "Ticket Actions", "prompt": { "value": "(function execute() {\n \n var x =\"Ticket Actions\"\n return x;\n})()\n", "mode": "script" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "skipReprompt": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "variableId": "4a866c38e02e44928b38037e40016ab2", "detailDescription": "", "id": "473aab0f6045417ab99471a3164e10d4", "stepType": "ReferenceChoicePrompt", "mode": "external", "script": "(function execute() {\n \n vaVars.msg_success = '';\n var options = []; // add options here...\n if( (vaVars.can_add_info == true))\n {\n options.push({ 'value': 'Add Information', 'label': gs.getMessageLang(\"Add information\", vaContext.getRequesterLang()), 'render_style': 'data' });\n options.push({ 'value': 'Add Attachment', 'label': gs.getMessageLang(\"Add an attachment\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n if(vaVars.can_request_update == true){\n options.push({ 'value': 'Request Updated Status', 'label': gs.getMessageLang(\"Request updated status\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n\n if( vaVars.show_ASR == true || vaVars.can_request_asr == true)\n {\n options.push({ 'value': 'Request Accelerated Service', 'label': gs.getMessageLang(\"Request accelerated service\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n if((vaVars.can_request_cancel == true) || (vaVars.can_cancel_incident == true) || (vaVars.can_cancel_automated == true)|| (vaVars.can_cancel_ritm == true) )\n {\n options.push({ 'value': 'Cancel this Ticket', 'label': gs.getMessageLang(\"Cancel this ticket\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n //can_order_again\n if((vaVars.can_order_again == true) )\n {\n options.push({ 'value': 'Order this Item Again', 'label': gs.getMessageLang(\"Order this item again\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n options.push({ 'value': 'Nothing else', 'label': gs.getMessageLang(\"That's all for this ticket\", vaContext.getRequesterLang()), 'render_style': 'data' });\n return options;\n})()\n", "metadataScript": "", "cardData": {}, "isMultipleSelect": false, "noRecordsResponseMsg": { "value": [ { "type": "paragraph", "children": [ { "text": "No choice are available" } ] } ], "mode": "simple" }, "condition": { "value": "(function execute() {\n \n vaVars.msg_success = '';\n var options = []; // add options here...\n if( (vaVars.can_add_info == true))\n {\n options.push({ 'value': 'Add Information', 'label': gs.getMessageLang(\"Add information\", vaContext.getRequesterLang()), 'render_style': 'data' });\n options.push({ 'value': 'Add Attachment', 'label': gs.getMessageLang(\"Add an attachment\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n if(vaVars.can_request_update == true){\n options.push({ 'value': 'Request Updated Status', 'label': gs.getMessageLang(\"Request updated status\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n\n if( vaVars.show_ASR == true || vaVars.can_request_asr == true)\n {\n options.push({ 'value': 'Request Accelerated Service', 'label': gs.getMessageLang(\"Request accelerated service\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n if((vaVars.can_request_cancel == true) || (vaVars.can_cancel_incident == true) || (vaVars.can_cancel_automated == true)|| (vaVars.can_cancel_ritm == true) )\n {\n options.push({ 'value': 'Cancel this Ticket', 'label': gs.getMessageLang(\"Cancel this ticket\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n //can_order_again\n if((vaVars.can_order_again == true) )\n {\n options.push({ 'value': 'Order this Item Again', 'label': gs.getMessageLang(\"Order this item again\", vaContext.getRequesterLang()), 'render_style': 'data' });\n \n }\n options.push({ 'value': 'Nothing else', 'label': gs.getMessageLang(\"That's all for this ticket\", vaContext.getRequesterLang()), 'render_style': 'data' });\n return options;\n})()\n", "mode": "external_script" }, "hasCardHeader": false, "cardMetadata": { "mode": "card", "metadataScript": "", "cardTemplate": "", "cardFields": {}, "cardDefinition": {} }, "withNluUserInput": false, "skipIfFulfilled": true }, "5d0e5efc116440cabac152f7aae6f5a6": { "id": "5d0e5efc116440cabac152f7aae6f5a6", "stepType": "Decision", "name": "Decision" }, "4bfbd5df6e91448fbfe0580172b3183e": { "id": "4bfbd5df6e91448fbfe0580172b3183e", "stepType": "TextOutput", "name": "existingASR", "secure": false, "value": [ { "value": "(function execute() {\n return gs.getMessageLang(\"This ticket has already been submitted for Accelerated Service. You can request a status update.\");\n})()\n", "mode": "script" } ], "requestFeedback": true, "applicability": { "value": "", "mode": "query" } }, "7a174f8f513149aca5d18f7271477be4": { "id": "7a174f8f513149aca5d18f7271477be4", "stepType": "BooleanPrompt", "name": "Request update", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "Would you like Request Updated Status ?" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "skipReprompt": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "withNluUserInput": false, "skipIfFulfilled": false, "variableId": "838e5125a5244409af8bc5e2cc9d3466", "detailDescription": "" }, "5d4cc5f8f8ec49f386dca99b3c0950ba": { "id": "5d4cc5f8f8ec49f386dca99b3c0950ba", "stepType": "Decision", "name": "Decision" }, "81ef4c6d0e0940e2ada800bdbd078ca6": { "id": "81ef4c6d0e0940e2ada800bdbd078ca6", "stepType": "ScriptOutput", "name": "Script - Request Accelerated Service", "output_type": "single_part", "script": "(function execute() {\n var response = '';\n var requesterLang = vaContext.getRequesterLang();\n var tableName = vaVars.table_name;\n var recordId = vaVars.sys_id;\n var userObject = gs.getUser();\n var userName = gs.getUserName();\n var userFullName = userObject.getFullName();\n\n var gr = new GlideRecord(tableName);\n if (gr.get(recordId)) {\n \n gr.setValue('u_accelerated_service_request', true);\n gr.setValue('u_last_portal_action', new GlideDateTime());\n gr.comments = userFullName + ' (' + userName + ') has submitted an Accelerated Service Request on this ticket.';\n gr.comments = \"Business justification: \" + vaInputs.business_justification ;\n gr.comments = \"Cost Center: \" + vaInputs.cost_center_.getDisplayValue() ;\n\n if(vaVars.outside_SLA == true)\n {\n gr.comments = \"Exceeded SLA\";\n }\n \n gr.update();\n return gs.getMessageLang(\"Accelerated Service Request was successfully submitted.\");//\n \n }\n\n\n\n\n\n\n})()\n", "applicability": { "value": "", "mode": "query" } }, "0d3c28a6208b474ebe0da24ccc1bafde": { "name": "Pending Info Choices", "prompt": { "value": "(function execute() {\n return gs.getMessageLang(\"This ticket is currently pending information from the customer. Would you like to add information or request accelerated service?\");\n})()\n", "mode": "script" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "skipReprompt": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "variableId": "393151af3fe0467d8e1b6030065e22d4", "detailDescription": "", "id": "0d3c28a6208b474ebe0da24ccc1bafde", "stepType": "ChoicePrompt", "hasCardHeader": false, "cardMetadata": { "mode": "card", "metadataScript": "", "cardTemplate": "", "cardFields": {}, "cardDefinition": {} }, "withNluUserInput": false, "skipIfFulfilled": false }, "95e1027c5c1740499cc33ec7eafc2bee": { "id": "95e1027c5c1740499cc33ec7eafc2bee", "stepType": "Decision", "name": "Decision" }, "5209824909864265bd1626108fb53d4e": { "id": "5209824909864265bd1626108fb53d4e", "stepType": "TextPrompt", "name": "Business Justification", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "Please provide the Business Justification" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "skipReprompt": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "withNluUserInput": false, "skipIfFulfilled": false, "variableId": "188b3bc88b46408c84b4453a27fc7dc2", "detailDescription": "", "inputType": { "format": "Text", "script": "" }, "requestFeedback": true }, "03df093548644eef80df8557462ca1fa": { "name": "Cost Center ", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "Please provide the Cost Center" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "skipReprompt": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "variableId": "f5c164f3e6914b2b904aa9f7b3562a9f", "detailDescription": "", "id": "03df093548644eef80df8557462ca1fa", "stepType": "ReferenceChoicePrompt", "mode": "glide_record", "script": "", "metadataScript": "", "cardData": {}, "isMultipleSelect": false, "noRecordsResponseMsg": { "value": [ { "type": "paragraph", "children": [ { "text": "No record selected" } ] } ], "mode": "simple" }, "condition": { "mode": "glide_query", "value": "u_active=true" }, "hasCardHeader": false, "cardMetadata": { "mode": "card", "metadataScript": "", "cardTemplate": "", "cardFields": {}, "cardDefinition": {} }, "withNluUserInput": false, "skipIfFulfilled": false }, "7b654f9ab19e4f4d8c5d2cfe4f28f7fc": { "id": "7b654f9ab19e4f4d8c5d2cfe4f28f7fc", "stepType": "ScriptOutput", "name": "Order again", "output_type": "single_part", "script": "(function execute() {\n var item = new GlideRecord('sc_cat_item');\n item.get(vaVars.cat_item);\n var portalName = (vaContext.deviceType == 'ios' || vaContext.deviceType == 'android') ? 'mesp' : gs.getProperty('sn_itsm_va.com.snc.itsm.virtualagent.portal_url');\n var link = gs.getProperty('glide.servlet.uri') + portalName + '?id=sc_cat_item&sys_id=' + vaVars.cat_item;\n var cardDetails = {\n 'linkLabel': 'Request this item',\n 'linkHref': link,\n 'identifier': 'Catalog Item',\n 'image': 'default-cart-icon.svg',\n 'header': item.getDisplayValue('name'),\n 'description': item.getDisplayValue('short_description'),\n 'alt': item.getDisplayValue('name'),\n 'fields': [],\n };\n \n return vaSystem.renderCard(\"CatalogCard\", JSON.stringify(cardDetails)); \n \n})()\n", "applicability": { "value": "", "mode": "query" } }, "c61ed9a0da9b44b5a4071fd236bc4580": { "id": "c61ed9a0da9b44b5a4071fd236bc4580", "stepType": "BooleanPrompt", "name": "check different", "prompt": { "value": [ { "type": "paragraph", "children": [ { "text": "Would you like to check a different ticket status?" } ] } ], "mode": "simple" }, "confirmMessage": { "value": "", "mode": "simple" }, "acknowledgeMsg": { "value": "", "mode": "simple" }, "applicability": { "value": "", "mode": "query" }, "skippable": { "value": "", "mode": "query" }, "skipReprompt": { "value": "", "mode": "query" }, "defaultValue": { "value": "", "mode": "simple" }, "withNluUserInput": false, "skipIfFulfilled": false, "variableId": "14fe62025c4744ce83fff184ea4ab175", "detailDescription": "" }, "1f504f29224a40a0bbbc4ccd1442715a": { "id": "1f504f29224a40a0bbbc4ccd1442715a", "stepType": "Decision", "name": "Decision" }, "8423135b5c5f4bcb9759ab5cc84e1560": { "id": "8423135b5c5f4bcb9759ab5cc84e1560", "stepType": "Component", "name": "Deflection: Record Created", "fields": [], "reusableTopicId": "7fb4ca055303201033cdddeeff7b12b3", "reusableTopicChoice": "Deflection", "sourceType": "TOPIC_BLOCK", "loading": false, "applicability": { "value": "", "mode": "query" }, "inputs": { "deflection_configuration": { "value": "70f49ddb87ee8e14a39b87bd0ebb35ba", "mode": "string", "type": "Reference", "table": "ssa_deflection_configuration" }, "deflection_pattern": { "value": "fb551ddb87ee8e14a39b87bd0ebb35dc", "mode": "string", "type": "Reference", "table": "ssa_deflection_pattern" }, "activity_table": { "value": "", "mode": "simple", "type": "String" }, "activity_ids": { "value": "", "mode": "simple", "type": "String" } }, "outputs": [], "outdatedNote": false, "variableIds": [] }, "ff490c82adef40e4beda2d32c06248fa": { "id": "ff490c82adef40e4beda2d32c06248fa", "stepType": "Component", "name": "Deflection: Record Updated", "fields": [], "reusableTopicId": "7fb4ca055303201033cdddeeff7b12b3", "reusableTopicChoice": "Deflection", "sourceType": "TOPIC_BLOCK", "loading": false, "applicability": { "value": "", "mode": "query" }, "inputs": { "deflection_configuration": { "value": "70f49ddb87ee8e14a39b87bd0ebb35ba", "mode": "string", "type": "Reference", "table": "ssa_deflection_configuration" }, "deflection_pattern": { "value": "7b55d19f87ee8e14a39b87bd0ebb351c", "mode": "string", "type": "Reference", "table": "ssa_deflection_pattern" }, "activity_table": { "value": "", "mode": "simple", "type": "String" }, "activity_ids": { "value": "", "mode": "simple", "type": "String" } }, "outputs": [], "outdatedNote": false, "variableIds": [] }, "18f6dd410b6a4fc0be70016679073670": { "id": "18f6dd410b6a4fc0be70016679073670", "stepType": "Component", "name": "Deflection: Record Updated", "fields": [], "reusableTopicId": "7fb4ca055303201033cdddeeff7b12b3", "reusableTopicChoice": "Deflection", "sourceType": "TOPIC_BLOCK", "loading": false, "applicability": { "value": "", "mode": "query" }, "inputs": { "deflection_configuration": { "value": "70f49ddb87ee8e14a39b87bd0ebb35ba", "mode": "string", "type": "Reference", "table": "ssa_deflection_configuration" }, "deflection_pattern": { "value": "7b55d19f87ee8e14a39b87bd0ebb351c", "mode": "string", "type": "Reference", "table": "ssa_deflection_pattern" }, "activity_table": { "value": "", "mode": "simple", "type": "String" }, "activity_ids": { "value": "", "mode": "simple", "type": "String" } }, "outputs": [], "outdatedNote": false, "variableIds": [] }, "b9c98511755249f5b9f316e3540de214": { "id": "b9c98511755249f5b9f316e3540de214", "stepType": "ReusableTopic", "name": "TC - Upload an attachment TB", "fields": [], "applicability": { "value": "", "mode": "query" }, "useTemplateTopic": false, "reusableTopicChoice": "TC - Upload an attachment TB", "reusableTopicId": "f80ee7968763065019357485dabb35b7", "inputs": { "ask_confirmation": { "value": "false", "mode": "string", "type": "True/False" } }, "outputs": [ { "id": "7869fc879281434093e68d277d607ec7", "value": "attachmentlist", "mapping": "attachmentlist" } ], "variableIds": [ "7869fc879281434093e68d277d607ec7" ], "dynamicTopicBlockName": { "value": "", "mode": "simple" }, "inputDynamicModal": {}, "outputDynamicModal": {} }, "3bc26972d2414c56b52a5eb7745e7460": { "id": "3bc26972d2414c56b52a5eb7745e7460", "stepType": "Component", "name": "Deflection: Record updated", "fields": [], "reusableTopicId": "7fb4ca055303201033cdddeeff7b12b3", "reusableTopicChoice": "Deflection", "sourceType": "TOPIC_BLOCK", "loading": false, "applicability": { "value": "", "mode": "query" }, "inputs": { "deflection_configuration": { "value": "93d2f7645383201033cdddeeff7b1208", "mode": "simple", "type": "Reference", "table": "ssa_deflection_configuration" }, "deflection_pattern": { "value": "7b55d19f87ee8e14a39b87bd0ebb351c", "mode": "string", "type": "Reference", "table": "ssa_deflection_pattern" }, "activity_table": { "value": "", "mode": "simple", "type": "String" }, "activity_ids": { "value": "", "mode": "simple", "type": "String" } }, "outputs": [], "outdatedNote": false, "variableIds": [] }, "9610746d8e294cb28df9eaace4c8c6b7": { "id": "9610746d8e294cb28df9eaace4c8c6b7", "name": "Attach to record", "script": "(function execute() {\n if (vaInputs.attachmentlist){\n var attachment = JSON.parse(vaInputs.attachmentlist)\n for(i=0;i<attachment.length;i++){\n vaSystem.attachToRecord(attachment[i],vaVars.table_name,vaVars.sys_id)\n }\n }\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } }, "5867beaae9f7469980b36fa31f2a0b8b": { "id": "5867beaae9f7469980b36fa31f2a0b8b", "name": "Clear entity before prompting again", "script": "(function execute() {\n \n vaInputs.manual_ticket_number.unbindEntity();\n\n})()\n", "stepType": "ScriptAction", "applicability": { "value": "", "mode": "query" } } }, "edges": [ { "id": "ff8083c3df9e4f30b41619b708914000", "edgeType": "Edge", "source": "9610746d8e294cb28df9eaace4c8c6b7", "target": "3bc26972d2414c56b52a5eb7745e7460", "sourcePort": "", "targetPort": "" }, { "id": "4d5098d18bb648eb8ac9875592e038f7", "edgeType": "Branch", "source": "1f504f29224a40a0bbbc4ccd1442715a", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.check_different=false", "mode": "query" }, "label": "false" }, { "id": "5db1bd345c614a48a35f8dd4b7ae69fb", "edgeType": "Branch", "source": "eb3d9e437e3247e7ac6b2ac7a278c4a3", "target": "1664bb86f79a4bc485474efd09a3bac7", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return parseInt(vaVars.count) == 1;\n})()" }, "label": "Only One Record" }, { "id": "1c6cbe3d91154da0bb6c91d1b052e9fb", "edgeType": "Branch", "source": "eb3d9e437e3247e7ac6b2ac7a278c4a3", "target": "c243501685354dc6b738e46b8c568318", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return parseInt(vaVars.count) > 1;\n})()\n" }, "label": "Multiple Records" }, { "id": "eb2136989196447390af243110d4e2a3", "edgeType": "Edge", "source": "03df093548644eef80df8557462ca1fa", "target": "81ef4c6d0e0940e2ada800bdbd078ca6", "sourcePort": "", "targetPort": "" }, { "id": "5e0b982c5d8e4d8e903873f1be3ac8b0", "edgeType": "Branch", "source": "95e1027c5c1740499cc33ec7eafc2bee", "target": "3decae531c5c44218ad6c4084e424ea8", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.pending_info_choices=Add Information", "mode": "query" }, "label": "Add Information - Pending Info" }, { "id": "da8ffbfbea92434a858b87717abc9164", "edgeType": "Edge", "source": "21984d4485c8494eb768da3b51dee007", "target": "473aab0f6045417ab99471a3164e10d4", "sourcePort": "", "targetPort": "" }, { "id": "8cfbd3156a274514b44eadf3845d3848", "edgeType": "Edge", "source": "5209824909864265bd1626108fb53d4e", "target": "03df093548644eef80df8557462ca1fa", "sourcePort": "", "targetPort": "" }, { "id": "c37bec3ac29d49eca0c3c8642e1a8252", "edgeType": "Branch", "source": "5d0e5efc116440cabac152f7aae6f5a6", "target": "0d3c28a6208b474ebe0da24ccc1bafde", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n if( vaVars.pending_info == true)\n { \n \n return true;\n }\n})()\n" }, "label": "Pending Info" }, { "id": "8508d026c14a40a8a5c75fc65e2b3df2", "edgeType": "Branch", "source": "5d4cc5f8f8ec49f386dca99b3c0950ba", "target": "c3bb1fbd4b3a4a55a1125ab71c6aef28", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.request_update=true", "mode": "query" }, "label": "true" }, { "id": "b790fd7c709c47a6b7dc0fb976f8483f", "edgeType": "Branch", "source": "5d4cc5f8f8ec49f386dca99b3c0950ba", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.request_update=false", "mode": "query" }, "label": "false" }, { "id": "e0746fb377664294aabe943da1534403", "edgeType": "Branch", "source": "d1f2b825e4ef4d27a932d6c495406346", "target": "c3bb1fbd4b3a4a55a1125ab71c6aef28", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n \n return(vaInputs.ticket_actions.getValue() == \"Request Updated Status\") ;\n})()\n" }, "label": "Request Update" }, { "id": "e72465895665462c9e9a0a59098d379f", "edgeType": "Edge", "source": "9778d2dd61f94427a3fdb98f5181d5c5", "target": "21984d4485c8494eb768da3b51dee007", "sourcePort": "", "targetPort": "" }, { "id": "f3bd1b0bdd754fd493f96446bffe2926", "edgeType": "Edge", "source": "4191fc1e146245548b6330977a2d0048", "target": "de5f3474f4b94ca2bed895427d0dd362", "sourcePort": "", "targetPort": "" }, { "id": "3b46b864044d4189ae35b696061073dc", "edgeType": "Branch", "source": "b48a1a33a1be4df4b02431260559f985", "target": "fe86fcd1425e4bff8f06725f76cab7ac", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n\n return (vaVars.table_name == 'incident');\n\n})()\n" }, "label": "Not REQ" }, { "id": "ea3e07908d8a439a90e3088702ea45b8", "edgeType": "Branch", "source": "78a679afb2c74cf28f1dbd924d790d63", "target": "e7bb21d34ff8446382b9cdbad619ed0a", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.confirm_intent=transfer_to_live_agent", "mode": "query" }, "label": "Live Agent" }, { "id": "2225ee3c8fb74a8884b778f6ae8bec80", "edgeType": "Branch", "source": "cbc7836090474d9da4ad99ae12449781", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.view_child_ritms=false", "mode": "query" }, "label": "false" }, { "id": "9faad59a14f54128975fd2cdf8a0b856", "edgeType": "Edge", "source": "6b58467603a741838c6c5eefc56b139e", "target": "dfa3bf55da904715a0da94590f798567", "sourcePort": "", "targetPort": "" }, { "id": "2bd6836087c84ddfa09cb00c5024620f", "edgeType": "Edge", "source": "310a74fe701549c8855dfe4ee472b58c", "target": "eb3d9e437e3247e7ac6b2ac7a278c4a3", "sourcePort": "", "targetPort": "" }, { "id": "c933bb2253d04fada883fc8901e13d2f", "edgeType": "Edge", "source": "c3bb1fbd4b3a4a55a1125ab71c6aef28", "target": "9e5b50ed9ae14bebb27823eceaddab6e", "sourcePort": "", "targetPort": "" }, { "id": "0230ed754c0c4c77b31d89d2cc25631d", "edgeType": "Branch", "source": "468ad9c9c14f444fbbe7dfc2c367ced3", "target": "749c240ea6824e83ab3e9391c915a430", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return parseInt(vaVars.incident_count) == 0 && parseInt(vaVars.requested_item_count) == 0;\n})()\n" }, "label": "Neither Incidents nor Requested Items" }, { "id": "d8f0b8366b214f57b721e294c368ae92", "edgeType": "Branch", "source": "7b1fed999d3447159f4730b64fa9e919", "target": "71aab37c01e24e98b2fcab331e6940ad", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.no_ticket_prompt_for_manual=true", "mode": "query" }, "label": "true" }, { "id": "21bf66348125435db11475e5700a0218", "edgeType": "Branch", "source": "7b1fed999d3447159f4730b64fa9e919", "target": "7b212f3837a24d2eb4699874823d3685", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.no_ticket_prompt_for_manual=false", "mode": "query" }, "label": "false" }, { "id": "7322f7ef022240ceaf077f5bca845d4d", "edgeType": "Edge", "source": "7b212f3837a24d2eb4699874823d3685", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "" }, { "id": "f0129c36a01044218b3311da65f8ea7c", "edgeType": "Edge", "source": "bbfb23cfdc7e41ada4ad3ebe702d8aa4", "target": "204af30ba0b6489aaacf31dec0c96610", "sourcePort": "", "targetPort": "" }, { "id": "b4d278c0dba44eab91855c60dbde6e61", "edgeType": "Edge", "source": "cb829b6594bc43199f2199b0f2fd9bc3", "target": "1664bb86f79a4bc485474efd09a3bac7", "sourcePort": "", "targetPort": "" }, { "id": "a38a3ab5d99a46819a920bc4237e92c7", "edgeType": "Branch", "source": "016ec6fc6365485f8098c33fd7aa7dec", "target": "9778d2dd61f94427a3fdb98f5181d5c5", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return vaVars.table_name == 'sc_req_item';\n})()\n" }, "label": "RITM" }, { "id": "c5580049d4d6446b99ac7d891eaa43ad", "edgeType": "Branch", "source": "016ec6fc6365485f8098c33fd7aa7dec", "target": "bcb5c006847d46abbc812494b0664cac", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return (vaVars.table_name == 'incident' || vaVars.table_name == 'u_imt_incident');\n})()\n" }, "label": "INC/IMT" }, { "id": "c83dd3137f4d45aa8640a5368f9ae5be", "edgeType": "Edge", "source": "c243501685354dc6b738e46b8c568318", "target": "1fed94d09a634e83876ef3b869b914a9", "sourcePort": "", "targetPort": "" }, { "id": "7db84c6a755a499a8224fc67c8fb78d9", "edgeType": "Edge", "source": "1fed94d09a634e83876ef3b869b914a9", "target": "f2cf1051a9494d1cb835181b7920256a", "sourcePort": "", "targetPort": "" }, { "id": "09a262864aaa4273a60b6a2a338ac6b8", "edgeType": "Edge", "source": "f2cf1051a9494d1cb835181b7920256a", "target": "016ec6fc6365485f8098c33fd7aa7dec", "sourcePort": "", "targetPort": "" }, { "id": "cf19cf88f04d40818bc6bd0913ee5934", "edgeType": "Edge", "source": "bcb5c006847d46abbc812494b0664cac", "target": "de5f3474f4b94ca2bed895427d0dd362", "sourcePort": "", "targetPort": "" }, { "id": "1108f34b79de49c494a3f4ff7544aa8d", "edgeType": "Edge", "source": "71aab37c01e24e98b2fcab331e6940ad", "target": "cb829b6594bc43199f2199b0f2fd9bc3", "sourcePort": "", "targetPort": "" }, { "id": "018b87800d1f480bbdffb78b2a15d9ef", "edgeType": "Branch", "source": "468ad9c9c14f444fbbe7dfc2c367ced3", "target": "ff36d91dd745479e8f2d1879eb1d5ef4", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return parseInt(vaVars.incident_count) != 0 || parseInt(vaVars.requested_item_count) != 0;\n})()\n" }, "label": "Has Records" }, { "id": "48717bb94c604cf2a4b6db8f87d67621", "edgeType": "Edge", "source": "ff36d91dd745479e8f2d1879eb1d5ef4", "target": "570e3ddba88d4acc968a50b76073bafe", "sourcePort": "", "targetPort": "" }, { "id": "3ebeec3c2da84632a8544463578f26ce", "edgeType": "Branch", "source": "570e3ddba88d4acc968a50b76073bafe", "target": "71aab37c01e24e98b2fcab331e6940ad", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.search_or_show_my_tickets=manual", "mode": "query" }, "label": "Search manual" }, { "id": "b80c24ab240e4c7db1478c415c0a0639", "edgeType": "Edge", "source": "749c240ea6824e83ab3e9391c915a430", "target": "7b1fed999d3447159f4730b64fa9e919", "sourcePort": "", "targetPort": "" }, { "id": "d3f7498e0a35483d95475fcf5d7a97d1", "edgeType": "Edge", "source": "1664bb86f79a4bc485474efd09a3bac7", "target": "6cb6f216c68a40f2bd268ba80d637a67", "sourcePort": "", "targetPort": "" }, { "id": "634fb099542a4d0bb3ed402f6a63d85b", "edgeType": "Branch", "source": "6cb6f216c68a40f2bd268ba80d637a67", "target": "f2cf1051a9494d1cb835181b7920256a", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n var error = (vaVars.ticketError == 'not found');\n return !error;\n})()\n" }, "label": "No error" }, { "id": "81122b17ff514a3e96a61dcf75adce17", "edgeType": "Branch", "source": "6cb6f216c68a40f2bd268ba80d637a67", "target": "a0c704f4986f4f08bfb8f3426e19285b", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n\n var promptLiveAgent = (vaVars.ticketError == 'not found' && vaVars.errorCount > 1);\n return promptLiveAgent;\n})()\n" }, "label": "Missing ticket - 2nd" }, { "id": "78b81954da03410591f39e68beb681d6", "edgeType": "Edge", "source": "a0c704f4986f4f08bfb8f3426e19285b", "target": "78a679afb2c74cf28f1dbd924d790d63", "sourcePort": "", "targetPort": "" }, { "id": "7cc0c874eb4e4b5582b6e4a07af0dbaa", "edgeType": "Branch", "source": "78a679afb2c74cf28f1dbd924d790d63", "target": "a0a35bb819bc4dffbaf9fcc6e18aa959", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.confirm_intent=manual", "mode": "query" }, "label": "Search again" }, { "id": "a552d4774a474cd6aee3016d8d2735a1", "edgeType": "Edge", "source": "a0a35bb819bc4dffbaf9fcc6e18aa959", "target": "71aab37c01e24e98b2fcab331e6940ad", "sourcePort": "", "targetPort": "" }, { "id": "ad9f4f9458d84d418c5b8d1ef7e9879d", "edgeType": "Branch", "source": "78a679afb2c74cf28f1dbd924d790d63", "target": "9e1caa087fba433e9e62c249c8826034", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.confirm_intent=my_tickets", "mode": "query" }, "label": "Open Tickets" }, { "id": "a7a763bf8cd040f7a0875f20f4988b2f", "edgeType": "Edge", "source": "9e1caa087fba433e9e62c249c8826034", "target": "dfa3bf55da904715a0da94590f798567", "sourcePort": "", "targetPort": "" }, { "id": "6a6fce2ac3b847aea27e9a7c786e7b89", "edgeType": "Edge", "source": "3decae531c5c44218ad6c4084e424ea8", "target": "c3bb1fbd4b3a4a55a1125ab71c6aef28", "sourcePort": "", "targetPort": "" }, { "id": "aa11283c47b848f5bfc199f404bc3f31", "edgeType": "Branch", "source": "570e3ddba88d4acc968a50b76073bafe", "target": "310a74fe701549c8855dfe4ee472b58c", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n var showMyTickets = (vaInputs.search_or_show_my_tickets == 'my_tickets' || vaVars.skip_manual_search_prompt == 'yes');\n \n return showMyTickets;\n})()\n" }, "label": "Show my tickets" }, { "id": "aa0f894d50e24cf59ce69bcb3dedf325", "edgeType": "Edge", "source": "204af30ba0b6489aaacf31dec0c96610", "target": "6b58467603a741838c6c5eefc56b139e", "sourcePort": "", "targetPort": "" }, { "id": "09fbe88e6f5d4230a75b88f01a934eea", "edgeType": "Edge", "source": "dfa3bf55da904715a0da94590f798567", "target": "6bbc1f0c5e584504908b2650656ebb43", "sourcePort": "", "targetPort": "" }, { "id": "5c678fe1abd04aee92af6d9bc04bcf72", "edgeType": "Branch", "source": "6bbc1f0c5e584504908b2650656ebb43", "target": "468ad9c9c14f444fbbe7dfc2c367ced3", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n /* Return true or false to indicate the branch condition's applicability.\n For example:\n\n var applies = vaInputs.first_name == 'Bill' ? true : false;\n return applies;\n */\n return (vaVars.ticketNumber.length === 0)\n\n})()\n" }, "label": "No ticketnumber entity" }, { "id": "3a7eaaf8ca904c67aecdd7ff163ea212", "edgeType": "Branch", "source": "6bbc1f0c5e584504908b2650656ebb43", "target": "71aab37c01e24e98b2fcab331e6940ad", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n\n return (vaVars.ticketNumber.length >= 1)\n\n})()\n" }, "label": "Detected ticket number" }, { "id": "1e1e0311863d43898364229e4e86f407", "edgeType": "Branch", "source": "016ec6fc6365485f8098c33fd7aa7dec", "target": "4191fc1e146245548b6330977a2d0048", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n \n return vaVars.table_name == 'sc_request';\n \n})()\n" }, "label": "REQ" }, { "id": "f5713abd14ea444f8bd623d1b39944d2", "edgeType": "Branch", "source": "b48a1a33a1be4df4b02431260559f985", "target": "991984825905453eac4bb1a98aba10e4", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n\n return (vaVars.table_name == 'sc_request');\n\n\n})()\n" }, "label": "REQ" }, { "id": "8b26eb5b8f4b4351b3c1b672ce7f971a", "edgeType": "Edge", "source": "991984825905453eac4bb1a98aba10e4", "target": "cbc7836090474d9da4ad99ae12449781", "sourcePort": "", "targetPort": "" }, { "id": "a38a48afa6964443bbb9c08fcc5acb4d", "edgeType": "Branch", "source": "cbc7836090474d9da4ad99ae12449781", "target": "0de5bca7454748988cdaf72d157444f7", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.view_child_ritms=true", "mode": "query" }, "label": "true" }, { "id": "aaf41404760c410e9bd9ddff28e0fcee", "edgeType": "Edge", "source": "0de5bca7454748988cdaf72d157444f7", "target": "4c1d97162e6742e6895d3c2fa05c22c5", "sourcePort": "", "targetPort": "" }, { "id": "24e4be5841e14e25b8f8c1c2f5f275eb", "edgeType": "Branch", "source": "4c1d97162e6742e6895d3c2fa05c22c5", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n\n return vaInputs.choose_child_ritm.getValue() == 'cancel';\n})()\n" }, "label": "Cancel" }, { "id": "258431158cfc429fa8b0ebe034ef272c", "edgeType": "Branch", "source": "4c1d97162e6742e6895d3c2fa05c22c5", "target": "74e28b57a52d4aaf83357c416d533f09", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n \n return vaInputs.choose_child_ritm.getValue() != 'cancel';\n \n})()\n" }, "label": "Ticket selected" }, { "id": "0ed70af936d44eea8cd0b75a2fc72331", "edgeType": "Edge", "source": "74e28b57a52d4aaf83357c416d533f09", "target": "1664bb86f79a4bc485474efd09a3bac7", "sourcePort": "", "targetPort": "" }, { "id": "ea5885b6192f481395764ef2a677b226", "edgeType": "Branch", "source": "3863d10d993c47c1ac7ca5ee981cfdd6", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.view_child_ritms!=true", "mode": "query" }, "label": "No" }, { "id": "886e3146637640a08525c6a9cdd35594", "edgeType": "Branch", "source": "3863d10d993c47c1ac7ca5ee981cfdd6", "target": "991984825905453eac4bb1a98aba10e4", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.view_child_ritms=true", "mode": "query" }, "label": "From REQ" }, { "id": "5cf48573c0bf4858ba38c984724d16d2", "edgeType": "Edge", "source": "e7bb21d34ff8446382b9cdbad619ed0a", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "" }, { "id": "8b07eff7d79f4bcd826a4604ed22fd80", "edgeType": "Branch", "source": "6cb6f216c68a40f2bd268ba80d637a67", "target": "a24a36da2d1c4661a2fd80cde7b51739", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n /* Return true or false to indicate the branch condition's applicability.\n For example:\n\n var applies = vaInputs.first_name == 'Bill' ? true : false;\n return applies;\n */\n var retryTicketSearch = (vaVars.ticketError == 'not found' && vaVars.errorCount < 2);\n return retryTicketSearch;\n})()\n" }, "label": "Missing ticket - 1st" }, { "id": "40e1fc0e2132486da986fb30ce1f1e8c", "edgeType": "Edge", "source": "a24a36da2d1c4661a2fd80cde7b51739", "target": "71aab37c01e24e98b2fcab331e6940ad", "sourcePort": "", "targetPort": "" }, { "id": "ef15780a136f48c39c1cb37575e6d215", "edgeType": "Branch", "source": "fe86fcd1425e4bff8f06725f76cab7ac", "target": "473aab0f6045417ab99471a3164e10d4", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n /* Return true or false to indicate the branch condition's applicability.\n For example:\n\n var applies = vaInputs.first_name == 'Bill' ? true : false;\n return applies;\n */\n \n return (vaVars.Is_Active = true);\n \n})()\n" }, "label": "Active Record" }, { "id": "a40c3827c30e4e82b5f9a4adf988afec", "edgeType": "Branch", "source": "fe86fcd1425e4bff8f06725f76cab7ac", "target": "70a790428cd44d728b2d224cbfed6502", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n /* Return true or false to indicate the branch condition's applicability.\n For example:\n\n var applies = vaInputs.first_name == 'Bill' ? true : false;\n return applies;\n */\n \n return (vaVars.Is_Active = false);\n \n})()\n" }, "label": "Inactive Record" }, { "id": "295ed50d1df543a4b6af5b79f097b011", "edgeType": "Edge", "source": "70a790428cd44d728b2d224cbfed6502", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "" }, { "id": "e5e12923eb904156a9f5956106c79ad4", "edgeType": "Edge", "source": "de5f3474f4b94ca2bed895427d0dd362", "target": "cab73d0ac2e0469f832064605802f577", "sourcePort": "", "targetPort": "" }, { "id": "05b662a8d25a40e6b96e99393f8ff30a", "edgeType": "Edge", "source": "cab73d0ac2e0469f832064605802f577", "target": "b48a1a33a1be4df4b02431260559f985", "sourcePort": "", "targetPort": "" }, { "id": "2f35ce25d65642f59b637dea36688c4d", "edgeType": "Branch", "source": "d1f2b825e4ef4d27a932d6c495406346", "target": "c3b98b3216fb4d0e99861ee158b68dea", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return (vaInputs.ticket_actions.getValue() == \"Cancel this Ticket\");\n})()\n" }, "label": "Cancel This Ticket" }, { "id": "049eca37104a4ed98ceaf2717996d51c", "edgeType": "Edge", "source": "c3b98b3216fb4d0e99861ee158b68dea", "target": "3decae531c5c44218ad6c4084e424ea8", "sourcePort": "", "targetPort": "" }, { "id": "bc0447ec6c3846c3bcc105e4716e242d", "edgeType": "Edge", "source": "473aab0f6045417ab99471a3164e10d4", "target": "d1f2b825e4ef4d27a932d6c495406346", "sourcePort": "", "targetPort": "" }, { "id": "1840a36bc3de4563b3a7e86a3cc160b5", "edgeType": "Branch", "source": "d1f2b825e4ef4d27a932d6c495406346", "target": "5d0e5efc116440cabac152f7aae6f5a6", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\nreturn(vaInputs.ticket_actions.getValue() == \"Request Accelerated Service\") ;\n \n})()\n" }, "label": "Request Accelerated Service" }, { "id": "2c8823a5b4354b18a73f98bdc2554592", "edgeType": "Branch", "source": "5d0e5efc116440cabac152f7aae6f5a6", "target": "4bfbd5df6e91448fbfe0580172b3183e", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n if( vaVars.existing_ASR == true)\n { \n \n return true;\n }\n})()\n" }, "label": "Existing ASR" }, { "id": "f256d52cb33b4878a0873b5ba8e3e42f", "edgeType": "Edge", "source": "4bfbd5df6e91448fbfe0580172b3183e", "target": "7a174f8f513149aca5d18f7271477be4", "sourcePort": "", "targetPort": "" }, { "id": "2ac49ff0e3e143bd9727cdbb15f3ca18", "edgeType": "Edge", "source": "7a174f8f513149aca5d18f7271477be4", "target": "5d4cc5f8f8ec49f386dca99b3c0950ba", "sourcePort": "", "targetPort": "" }, { "id": "93eeb2ee48f644c18636758e36fe6347", "edgeType": "Edge", "source": "0d3c28a6208b474ebe0da24ccc1bafde", "target": "95e1027c5c1740499cc33ec7eafc2bee", "sourcePort": "", "targetPort": "" }, { "id": "024f1c4e4b894ad68dabb7b12d8a8116", "edgeType": "Branch", "source": "95e1027c5c1740499cc33ec7eafc2bee", "target": "81ef4c6d0e0940e2ada800bdbd078ca6", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.pending_info_choices=Request Accelerated Service", "mode": "query" }, "label": "ASR - Pending Info" }, { "id": "a28498095928443691b3d703645cc5ca", "edgeType": "Branch", "source": "5d0e5efc116440cabac152f7aae6f5a6", "target": "5209824909864265bd1626108fb53d4e", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n if( vaVars.existing_ASR == false || vaVars.outside_SLA == true)\n { \n \n return true;\n }\n})()\n" }, "label": "No ASR" }, { "id": "b3effeb287c6480aba0a3fb0a849fe64", "edgeType": "Branch", "source": "d1f2b825e4ef4d27a932d6c495406346", "target": "3decae531c5c44218ad6c4084e424ea8", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return (vaInputs.ticket_actions.getValue() == \"Add Information\");\n})()\n" }, "label": "Add Information" }, { "id": "f789ed357e1748afa17aae967d5e4cfd", "edgeType": "Branch", "source": "d1f2b825e4ef4d27a932d6c495406346", "target": "7b654f9ab19e4f4d8c5d2cfe4f28f7fc", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return(vaInputs.ticket_actions.getValue() == \"Order this Item Again\") ;\n})()\n" }, "label": "Order this Item Again" }, { "id": "8785c9df448848c3b0ef0cf1f10ad6c5", "edgeType": "Branch", "source": "d1f2b825e4ef4d27a932d6c495406346", "target": "c61ed9a0da9b44b5a4071fd236bc4580", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\n return(vaInputs.ticket_actions.getValue() == \"Nothing else\") ;\n})()\n" }, "label": "Nothing else" }, { "id": "38719f92c59b412ca711b839e09e6786", "edgeType": "Edge", "source": "c61ed9a0da9b44b5a4071fd236bc4580", "target": "1f504f29224a40a0bbbc4ccd1442715a", "sourcePort": "", "targetPort": "" }, { "id": "135ad02e53f6460e9d14d4897b12e3fc", "edgeType": "Edge", "source": "7b654f9ab19e4f4d8c5d2cfe4f28f7fc", "target": "8423135b5c5f4bcb9759ab5cc84e1560", "sourcePort": "", "targetPort": "" }, { "id": "8ba7945271bc4362ac7b9cb7cf4c78dd", "edgeType": "Edge", "source": "8423135b5c5f4bcb9759ab5cc84e1560", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "" }, { "id": "c30043d006d34b30b770cdd7d87fac87", "edgeType": "Edge", "source": "9e5b50ed9ae14bebb27823eceaddab6e", "target": "ff490c82adef40e4beda2d32c06248fa", "sourcePort": "", "targetPort": "" }, { "id": "c29b7f13fa554aaabce672b6d85dc21c", "edgeType": "Edge", "source": "ff490c82adef40e4beda2d32c06248fa", "target": "3863d10d993c47c1ac7ca5ee981cfdd6", "sourcePort": "", "targetPort": "" }, { "id": "a54b45b058b449d5b486a47f1695358a", "edgeType": "Edge", "source": "81ef4c6d0e0940e2ada800bdbd078ca6", "target": "18f6dd410b6a4fc0be70016679073670", "sourcePort": "", "targetPort": "" }, { "id": "a1c1c0b128de4f48954f0e723aa15325", "edgeType": "Edge", "source": "18f6dd410b6a4fc0be70016679073670", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "" }, { "id": "b48936157f0d4155ad48370dd79f1c7f", "edgeType": "Branch", "source": "d1f2b825e4ef4d27a932d6c495406346", "target": "b9c98511755249f5b9f316e3540de214", "sourcePort": "", "targetPort": "", "expression": { "mode": "script", "value": "(function execute() {\nreturn(vaInputs.ticket_actions.getValue() == \"Add Attachment\") ;\n \n})()\n" }, "label": "Add an Attachment" }, { "id": "3574f32d4194449abdb3b45b2a5f4f0b", "edgeType": "Edge", "source": "3bc26972d2414c56b52a5eb7745e7460", "target": "069cc8f28f7f4c53b9946efaaea2e14c", "sourcePort": "", "targetPort": "" }, { "id": "a97ddb7140984f0885e8f9a8d46719a9", "edgeType": "Edge", "source": "b9c98511755249f5b9f316e3540de214", "target": "9610746d8e294cb28df9eaace4c8c6b7", "sourcePort": "", "targetPort": "" }, { "id": "66540a42b23d492ca9cde5095c9f0b23", "edgeType": "Branch", "source": "1f504f29224a40a0bbbc4ccd1442715a", "target": "5867beaae9f7469980b36fa31f2a0b8b", "sourcePort": "", "targetPort": "", "expression": { "value": "vaInputs.check_different=true", "mode": "query" }, "label": "true" }, { "id": "94475d21f7ed42269063df6186b8acbc", "edgeType": "Edge", "source": "5867beaae9f7469980b36fa31f2a0b8b", "target": "204af30ba0b6489aaacf31dec0c96610", "sourcePort": "", "targetPort": "" } ] } }, "variables": { "02443a07a73244989cabc13af6443571": { "id": "02443a07a73244989cabc13af6443571", "name": "LiveAgent_application", "value": { "mode": "simple", "value": "itsm" }, "varType": "script", "label": "LiveAgent_application", "category": "vaVars" }, "7efc5bf157f04b168de49e42adccc218": { "id": "7efc5bf157f04b168de49e42adccc218", "name": "show_list_of_tickets", "label": "Show List Of Tickets", "varType": "reference", "table": "sc_req_item", "category": "vaInputs", "nodeId": "c243501685354dc6b738e46b8c568318", "isHidden": false, "autoSelect": false, "autoSelectExpression": "" }, "67b0606c2b9d4701a850902975492c82": { "id": "67b0606c2b9d4701a850902975492c82", "name": "comment", "label": "Comment", "varType": "string", "category": "vaInputs", "secure": false, "encryptionSalt": { "value": "MTYzMDQ3Nzg5NDQ4NCBWQSBEZXNpZ25lciBpcyBhd2Vzb21l", "mode": "simple" }, "encryptionHashFunction": "SHA-256", "nodeId": "c3bb1fbd4b3a4a55a1125ab71c6aef28", "isHidden": false }, "9ee9911f76984d97a9bccc31ffa621c0": { "id": "9ee9911f76984d97a9bccc31ffa621c0", "value": { "mode": "simple", "value": "0" }, "name": "index", "label": "index", "varType": "script", "category": "vaVars" }, "4d0b8d83157a4bd8a13754478eca3881": { "id": "4d0b8d83157a4bd8a13754478eca3881", "value": { "mode": "script", "value": "(function execute() {\n var limitProp = gs.getProperty('com.glide.cs.picker_page_limit');\n var limit = limitProp.length ? limitProp : 10;\n return limit;\n})()\n" }, "name": "limit", "label": "limit", "varType": "script", "category": "vaVars" }, "83e7b3b00dfc4e8ea8da231eaf22847b": { "id": "83e7b3b00dfc4e8ea8da231eaf22847b", "value": { "mode": "simple", "value": "0" }, "name": "incident_count", "label": "incident_count", "varType": "script", "category": "vaVars" }, "0bed9e584be447e9bbab899c2dc02c13": { "id": "0bed9e584be447e9bbab899c2dc02c13", "value": { "mode": "simple", "value": "0" }, "name": "requested_item_count", "label": "requested_item_count", "varType": "script", "category": "vaVars" }, "336cc7f9fb1441e6ae1429fc2e62d88f": { "id": "336cc7f9fb1441e6ae1429fc2e62d88f", "value": { "value": "", "mode": "simple" }, "name": "table_name", "label": "table_name", "varType": "script", "category": "vaVars" }, "a9f46a1bc94249e59b6e2634306b1c19": { "id": "a9f46a1bc94249e59b6e2634306b1c19", "value": { "mode": "simple", "value": "0" }, "name": "count", "label": "count", "varType": "script", "category": "vaVars" }, "3a670e07543e4fb3b432b1b9ee1c2b32": { "id": "3a670e07543e4fb3b432b1b9ee1c2b32", "value": { "value": "", "mode": "simple" }, "name": "sys_id", "label": "sys_id", "varType": "script", "category": "vaVars" }, "7cd9967dfbfd44498a29f9f75e7a398a": { "category": "vaInputs", "id": "7cd9967dfbfd44498a29f9f75e7a398a", "label": "User", "name": "user", "table": "sys_user", "varType": "reference", "nodeId": "2ebc047c41714dfd967ef3324f169d5d", "isHidden": false }, "14bb3669728f423f9e378260a75b8ae3": { "id": "14bb3669728f423f9e378260a75b8ae3", "value": { "mode": "script", "value": "(function execute() {\n if (vaContext.deviceType == 'ios' || vaContext.deviceType == 'android') {\n return 'mesp';\n }\n return gs.getProperty('sn_itsm_va.com.snc.itsm.virtualagent.portal_url');\n})()\n" }, "name": "portalName", "label": "portalName", "varType": "script", "category": "vaVars" }, "c33da00982cc4d66bc5e3619af4af5cd": { "id": "c33da00982cc4d66bc5e3619af4af5cd", "value": { "mode": "simple", "value": "2" }, "name": "max_comment_count", "label": "max_comment_count", "varType": "script", "category": "vaVars" }, "fd3338bf46b24351b86263f8f203d68e": { "id": "fd3338bf46b24351b86263f8f203d68e", "value": { "mode": "simple", "value": "143" }, "name": "comments_length", "label": "comments_length", "varType": "script", "category": "vaVars" }, "1b423ae3c16045bd82d8179fd9a3b69b": { "id": "1b423ae3c16045bd82d8179fd9a3b69b", "value": { "mode": "script", "value": "(function execute() {\n return gs.getProperty('glide.servlet.uri') ;\n})()\n" }, "name": "baseUri", "label": "baseUri", "varType": "script", "category": "vaVars" }, "b560110021554a54bc421ccdad1eb3f0": { "id": "b560110021554a54bc421ccdad1eb3f0", "value": { "mode": "simple", "value": "" }, "name": "ticketNumber", "label": "ticketNumber", "varType": "script", "category": "vaVars" }, "5591450a36b74510822ffb2d5b072a9a": { "id": "5591450a36b74510822ffb2d5b072a9a", "name": "get_ticket_number", "label": "Get Ticket Number", "varType": "string", "secure": false, "category": "vaInputs", "encryptionHashFunction": "SHA-256", "encryptionSalt": { "value": "MTY5NTQwNDQ5NDk3OSBWQSBEZXNpZ25lciBpcyBhd2Vzb21l", "mode": "simple" }, "nodeId": "204af30ba0b6489aaacf31dec0c96610", "isHidden": false }, "82d02096829544329b0575f4929087b2": { "id": "82d02096829544329b0575f4929087b2", "name": "manual_ticket_number", "label": "Manual Ticket Number", "varType": "string", "secure": false, "category": "vaInputs", "encryptionHashFunction": "SHA-256", "encryptionSalt": { "value": "MTY5NTkwOTcwNTcwOSBWQSBEZXNpZ25lciBpcyBhd2Vzb21l", "mode": "simple" }, "nodeId": "71aab37c01e24e98b2fcab331e6940ad", "isHidden": false }, "23c1b98ebdc44201bccd0e25b207d28d": { "id": "23c1b98ebdc44201bccd0e25b207d28d", "name": "search_or_show_my_tickets", "label": "Search Or Show My Tickets", "varType": "choice", "choices": [ { "label": "Search for a ticket", "value": "manual" }, { "label": "Show my open tickets", "value": "my_tickets" } ], "category": "vaInputs", "nodeId": "ff36d91dd745479e8f2d1879eb1d5ef4", "isHidden": false }, "0ee0f74b3a9f436684b369db92aa58b7": { "id": "0ee0f74b3a9f436684b369db92aa58b7", "value": { "mode": "simple", "value": "38fa64edc0a8016400f4a5724b0434b8" }, "name": "schedule", "label": "schedule", "varType": "script", "category": "vaVars" }, "37710cb8b54f490c8266b6e26efe0211": { "id": "37710cb8b54f490c8266b6e26efe0211", "value": { "mode": "script", "value": "(function execute() {\n var lang = vaContext.getRequesterLang() || 'en';\n return lang;\n})()\n" }, "name": "requesterLang", "label": "requesterLang", "varType": "script", "category": "vaVars" }, "dc4537990bc34aabad7835243ec79b72": { "id": "dc4537990bc34aabad7835243ec79b72", "name": "no_ticket_prompt_for_manual", "label": "No Ticket, Prompt For Manual", "varType": "boolean", "secure": false, "category": "vaInputs", "nodeId": "749c240ea6824e83ab3e9391c915a430", "isHidden": false }, "3ec1c9b319204c6e8a190ef95774dbd9": { "id": "3ec1c9b319204c6e8a190ef95774dbd9", "value": { "value": "", "mode": "simple" }, "name": "ticketError", "label": "ticketError", "varType": "script", "category": "vaVars" }, "a847903e32d14f70b53a406c42d83414": { "id": "a847903e32d14f70b53a406c42d83414", "value": { "mode": "simple", "value": "0" }, "name": "errorCount", "label": "errorCount", "varType": "script", "category": "vaVars" }, "501f4be04d924743a4c6cc44699b0920": { "id": "501f4be04d924743a4c6cc44699b0920", "name": "confirm_intent", "label": "Confirm Intent", "varType": "choice", "choices": [ { "label": "Search ticket number again", "value": "manual" }, { "label": "Show my open tickets", "value": "my_tickets", "checked": true, "meta": {} }, { "label": "Chat with a live agent", "value": "transfer_to_live_agent", "checked": true, "meta": {} } ], "category": "vaInputs", "nodeId": "a0c704f4986f4f08bfb8f3426e19285b", "isHidden": false }, "c35724d268594ff598b011b0dc965df7": { "id": "c35724d268594ff598b011b0dc965df7", "value": { "mode": "simple", "value": "no" }, "name": "skip_manual_search_prompt", "label": "skip_manual_search_prompt", "varType": "script", "category": "vaVars" }, "2a41316269914783a8da9743f1c7eb0e": { "id": "2a41316269914783a8da9743f1c7eb0e", "name": "restrict_comment_", "label": "Restrict Comment?", "varType": "boolean", "secure": false, "category": "vaInputs", "nodeId": "3decae531c5c44218ad6c4084e424ea8", "isHidden": false }, "dd47fe8b99884ad99ecbc28d24e9e1a2": { "id": "dd47fe8b99884ad99ecbc28d24e9e1a2", "value": { "mode": "simple", "value": "0" }, "name": "request_count", "label": "request_count", "varType": "script", "category": "vaVars" }, "051ea580e27547b793f137c495bb48b1": { "id": "051ea580e27547b793f137c495bb48b1", "name": "view_child_ritms", "label": "View Child Ritms", "varType": "boolean", "secure": false, "category": "vaInputs", "nodeId": "991984825905453eac4bb1a98aba10e4", "isHidden": false }, "d814c464077c4bdf8121766643a62bdb": { "id": "d814c464077c4bdf8121766643a62bdb", "name": "choose_child_ritm", "label": "Choose Child RITM", "varType": "reference", "table": "", "category": "vaInputs", "nodeId": "0de5bca7454748988cdaf72d157444f7", "isHidden": false, "autoSelect": false, "autoSelectExpression": "" }, "ea6a58c603b44a74a259db779689223a": { "id": "ea6a58c603b44a74a259db779689223a", "value": { "value": "", "mode": "simple" }, "name": "child_ritm_id", "label": "child_ritm_id", "varType": "script", "category": "vaVars" }, "76a725802d04428684ecad7b6b0c5bcb": { "id": "76a725802d04428684ecad7b6b0c5bcb", "value": { "value": "", "mode": "simple" }, "name": "req_number", "label": "req_number", "varType": "script", "category": "vaVars" }, "46b458086b2649ce97b226187d51a86b": { "id": "46b458086b2649ce97b226187d51a86b", "value": { "mode": "simple", "value": "0" }, "name": "displayed_child_ritm", "label": "displayed_child_ritm", "varType": "script", "category": "vaVars" }, "652ec689d38c46c4875f0e15214aad7a": { "id": "652ec689d38c46c4875f0e15214aad7a", "value": { "value": "", "mode": "simple" }, "name": "child_ritm_number", "label": "child_ritm_number", "varType": "script", "category": "vaVars" }, "47d68cf806124341bf546930bb4df712": { "id": "47d68cf806124341bf546930bb4df712", "value": { "value": "", "mode": "simple" }, "name": "req_sysid", "label": "req_sysid", "varType": "script", "category": "vaVars" }, "7f2663756b9b4e1f9d114e756b59571c": { "id": "7f2663756b9b4e1f9d114e756b59571c", "value": { "mode": "simple", "value": "True" }, "name": "Is_Active", "label": "Is_Active", "varType": "script", "category": "vaVars" }, "c5efe2b2b46e4ec58f1a51575dbddd53": { "id": "c5efe2b2b46e4ec58f1a51575dbddd53", "value": { "mode": "simple", "value": "" }, "name": "showAutomatedActions_", "label": "showAutomatedActions_", "varType": "script", "category": "vaVars" }, "ec0f9a08b0c24fe38291c594d6eb6557": { "id": "ec0f9a08b0c24fe38291c594d6eb6557", "value": { "mode": "simple", "value": "" }, "name": "option", "label": "option", "varType": "script", "category": "vaVars" }, "04b79519eeb741bfb31a4399e7aa8e24": { "id": "04b79519eeb741bfb31a4399e7aa8e24", "value": { "value": "", "mode": "simple" }, "name": "Option_type", "label": "Option_type", "varType": "script", "category": "vaVars" }, "4a866c38e02e44928b38037e40016ab2": { "id": "4a866c38e02e44928b38037e40016ab2", "name": "ticket_actions", "label": "Ticket Actions", "varType": "reference", "table": "", "category": "vaInputs", "nodeId": "473aab0f6045417ab99471a3164e10d4", "isHidden": false, "autoSelect": false, "autoSelectExpression": "" }, "e4c52e0607ed4ff99337aea520ae6398": { "id": "e4c52e0607ed4ff99337aea520ae6398", "value": { "value": "", "mode": "simple" }, "name": "existing_ASR", "label": "existing_ASR", "varType": "script", "category": "vaVars" }, "97f968b99e634694a811bc61ff34b11a": { "id": "97f968b99e634694a811bc61ff34b11a", "value": { "value": "", "mode": "simple" }, "name": "within_SLA", "label": "within_SLA", "varType": "script", "category": "vaVars" }, "45036ecab8264db9b64c4bd8d87e4431": { "id": "45036ecab8264db9b64c4bd8d87e4431", "value": { "value": "", "mode": "simple" }, "name": "show_ASR", "label": "show_ASR", "varType": "script", "category": "vaVars" }, "0d006bcb47114e2e8ff5da9b9861e9de": { "id": "0d006bcb47114e2e8ff5da9b9861e9de", "value": { "value": "", "mode": "simple" }, "name": "outside_SLA", "label": "outside_SLA", "varType": "script", "category": "vaVars" }, "e50d434fc4734219a30a74740ec37e4b": { "id": "e50d434fc4734219a30a74740ec37e4b", "value": { "value": "", "mode": "simple" }, "name": "template_ASR", "label": "template_ASR", "varType": "script", "category": "vaVars" }, "838e5125a5244409af8bc5e2cc9d3466": { "id": "838e5125a5244409af8bc5e2cc9d3466", "name": "request_update", "label": "Request Update", "varType": "boolean", "secure": false, "category": "vaInputs", "nodeId": "7a174f8f513149aca5d18f7271477be4", "isHidden": false }, "3016833043aa479da63afe9514d07759": { "id": "3016833043aa479da63afe9514d07759", "value": { "value": "", "mode": "simple" }, "name": "pending_info", "label": "pending_info", "varType": "script", "category": "vaVars" }, "393151af3fe0467d8e1b6030065e22d4": { "id": "393151af3fe0467d8e1b6030065e22d4", "name": "pending_info_choices", "label": "Pending Info Choices", "varType": "choice", "choices": [ { "label": "Add Information", "value": "Add Information" }, { "label": "Request Accelerated Service", "value": "Request Accelerated Service" } ], "category": "vaInputs", "nodeId": "0d3c28a6208b474ebe0da24ccc1bafde", "isHidden": false }, "188b3bc88b46408c84b4453a27fc7dc2": { "id": "188b3bc88b46408c84b4453a27fc7dc2", "name": "business_justification", "label": "Business Justification", "varType": "string", "secure": false, "category": "vaInputs", "encryptionHashFunction": "SHA-256", "encryptionSalt": { "value": "MTcxNTE4NDgyNTEwNCBWQSBEZXNpZ25lciBpcyBhd2Vzb21l", "mode": "simple" }, "nodeId": "5209824909864265bd1626108fb53d4e", "isHidden": false }, "f5c164f3e6914b2b904aa9f7b3562a9f": { "id": "f5c164f3e6914b2b904aa9f7b3562a9f", "name": "cost_center_", "label": "Cost Center ", "varType": "reference", "table": "cmn_cost_center", "category": "vaInputs", "nodeId": "03df093548644eef80df8557462ca1fa", "isHidden": false, "autoSelect": false, "autoSelectExpression": "" }, "bbe55a11802a4f58b1d954708bd85b8e": { "id": "bbe55a11802a4f58b1d954708bd85b8e", "value": { "value": "", "mode": "simple" }, "name": "show_actions", "label": "show_actions", "varType": "script", "category": "vaVars" }, "dcb744db4617464387b0e9350399e4ba": { "id": "dcb744db4617464387b0e9350399e4ba", "value": { "value": "", "mode": "simple" }, "name": "high_priority", "label": "high_priority", "varType": "script", "category": "vaVars" }, "226435414e3e497a905305538a40f87f": { "id": "226435414e3e497a905305538a40f87f", "value": { "value": "", "mode": "simple" }, "name": "can_request_cancel", "label": "can_request_cancel", "varType": "script", "category": "vaVars" }, "ced317950f63443eab885195412f9874": { "id": "ced317950f63443eab885195412f9874", "value": { "value": "", "mode": "simple" }, "name": "can_cancel_incident", "label": "can_cancel_incident", "varType": "script", "category": "vaVars" }, "5e61b483c86d42d7a2b25cf961d73a90": { "id": "5e61b483c86d42d7a2b25cf961d73a90", "value": { "value": "", "mode": "simple" }, "name": "can_request_update", "label": "can_request_update", "varType": "script", "category": "vaVars" }, "939a3bf9bcf74b6180d8fff262502d1e": { "id": "939a3bf9bcf74b6180d8fff262502d1e", "value": { "value": "", "mode": "simple" }, "name": "can_add_info", "label": "can_add_info", "varType": "script", "category": "vaVars" }, "2b6dd5958e824fc5bd96d98865eeda4e": { "id": "2b6dd5958e824fc5bd96d98865eeda4e", "value": { "value": "", "mode": "simple" }, "name": "can_request_asr", "label": "can_request_asr", "varType": "script", "category": "vaVars" }, "176eafc4287343daad243f1779e5ab37": { "id": "176eafc4287343daad243f1779e5ab37", "value": { "value": "", "mode": "simple" }, "name": "can_cancel_ritm", "label": "can_cancel_ritm", "varType": "script", "category": "vaVars" }, "30460ef286d74a88bbdd7c6b93e47104": { "id": "30460ef286d74a88bbdd7c6b93e47104", "value": { "value": "", "mode": "simple" }, "name": "can_cancel_automated", "label": "can_cancel_automated", "varType": "script", "category": "vaVars" }, "48e08fba11284d48b1961fdc4f371c97": { "id": "48e08fba11284d48b1961fdc4f371c97", "value": { "value": "", "mode": "simple" }, "name": "msg_success", "label": "msg_success", "varType": "script", "category": "vaVars" }, "30b0eb0fd38348d6b00525ef1020e986": { "id": "30b0eb0fd38348d6b00525ef1020e986", "value": { "value": "", "mode": "simple" }, "name": "event_name", "label": "event_name", "varType": "script", "category": "vaVars" }, "8e6b90709a954262ab31750128d6ae94": { "id": "8e6b90709a954262ab31750128d6ae94", "value": { "value": "", "mode": "simple" }, "name": "trigger_Event", "label": "trigger_Event", "varType": "script", "category": "vaVars" }, "9414e93d8b1d4c578a6252670a0e9862": { "id": "9414e93d8b1d4c578a6252670a0e9862", "value": { "value": "", "mode": "simple" }, "name": "can_order_again", "label": "can_order_again", "varType": "script", "category": "vaVars" }, "14e2a89eadd44185b29122f73117f48b": { "id": "14e2a89eadd44185b29122f73117f48b", "value": { "value": "", "mode": "simple" }, "name": "cat_item", "label": "cat_item", "varType": "script", "category": "vaVars" }, "14fe62025c4744ce83fff184ea4ab175": { "id": "14fe62025c4744ce83fff184ea4ab175", "name": "check_different", "label": "Check Different", "varType": "boolean", "secure": false, "category": "vaInputs", "nodeId": "c61ed9a0da9b44b5a4071fd236bc4580", "isHidden": false }, "7869fc879281434093e68d277d607ec7": { "id": "7869fc879281434093e68d277d607ec7", "name": "attachmentlist", "label": "Attachmentlist", "defaultValue": "attachmentlist", "varType": "string", "category": "vaInputs", "metadata": { "libraryMappingType": "output" }, "nodeId": "b9c98511755249f5b9f316e3540de214", "isHidden": false } } }</graph>
<key_phrases>Check Ticket Status,ticket status,latest,update,check,status,Request,Requested Item,Incident</key_phrases>
<library>false</library>
<live_agent>false</live_agent>
<model_type>nlu_keyword</model_type>
<modify_confirmation_enabled>false</modify_confirmation_enabled>
<name>Check Ticket Status</name>
<nlu_intent/>
<nlu_intent_label/>
<nlu_model/>
<nlu_model_label/>
<nlu_provider/>
<palette_label/>
<roles/>
<root_topic_id>c98b1eccdb301300cde2fd131d9619dc</root_topic_id>
<secure_custom_input_control>false</secure_custom_input_control>
<source_topic_id>c98b1eccdb301300cde2fd131d9619dc</source_topic_id>
<sys_class_name>sys_cb_topic</sys_class_name>
<sys_created_by>000997271</sys_created_by>
<sys_created_on>2023-09-21 15:05:16</sys_created_on>
<sys_domain>global</sys_domain>
<sys_id>97995d2347553190540938b8036d4318</sys_id>
<sys_mod_count>443</sys_mod_count>
<sys_name>Check Ticket Status</sys_name>
<sys_package display_value="Global" source="global">global</sys_package>
<sys_policy/>
<sys_scope display_value="Global">global</sys_scope>
<sys_update_name>sys_cb_topic_97995d2347553190540938b8036d4318</sys_update_name>
<sys_updated_by>000510111</sys_updated_by>
<sys_updated_on>2025-02-14 14:28:33</sys_updated_on>
<title>Ticket Status and Actions</title>
<triggerable_by_notification>false</triggerable_by_notification>
<type>STANDARD</type>
<variables/>
</sys_cb_topic>
<sys_translated_text action="delete_multiple" query="documentkey=97995d2347553190540938b8036d4318"/>
<sys_variable_value action="delete_multiple" query="document_key=97995d2347553190540938b8036d4318"/>
</xml>
